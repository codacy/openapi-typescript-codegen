swagger: '2.0'

info:
  version: 3.0.0
  title: Codacy API
  description: |
    Codacy API v3 reference.

    [Import the OpenAPI 2.0 definition](https://api.codacy.com/api/api-docs/swagger.yaml) into your development tools to help bootstrap your integration with Codacy.
    For more information see [Using the Codacy API](https://docs.codacy.com/codacy-api/using-the-codacy-api/).
  contact:
    name: Codacy Team
    email: code@codacy.com
    url: https://www.codacy.com
  license:
    name: Codacy. All rights reserved
    url: https://www.codacy.com

schemes:
  - https

host: app.codacy.com

basePath: /api/v3

produces:
  - application/json
consumes:
  - application/json

# By default, all endpoints are authenticated.
# If you need an unauthenticated endpoint, check the example of /health
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: api-token
    description: Learn how to [generate an account API token](https://docs.codacy.com/codacy-api/api-tokens/#account-api-tokens)

definitions:

  Version:
    type: object
    required:
      - data
    properties:
      data:
        type: string

  Visibility:
    type: string
    description: "Visibility of the repository"
    example: "Private"
    x-ms-enum:
      name: "Visibility"
    enum:
      - Public
      - Private
      - LoginPublic

  RepositoryFilter:
    type: string
    x-ms-enum: &repositoryFilterName
      name: "RepositoryFilter"
    enum: &repositoryFilterEnum
      - Synced
      - NotSynced
      - AllSynced
    description: |
      Filters where to fetch the repositories from:
        * `AllSynced` - All organization's repositories in Codacy. Requires Admin access
        * `NotSynced` - All organization's repositories fetched from provider.
        * `Synced` - All organization's repositories that the user has access.

  ConfigurationStatusCategory:
    type: string
    x-ms-enum:
      name: "ConfigurationStatusCategory"
    enum:
      - database
      - secrets
      - email
      - github
      - github-enterprise
      - bitbucket
      - bitbucket-server
      - gitlab
      - gitlab-enterprise
      - license

  Provider:
    type: string
    description: "Git provider hosting the repository"
    example: "gh"
    x-ms-enum: &providerEnumName
      name: "Provider"
    enum: &providerEnum
      - bb
      - gh
      - gl

  CodacyProduct:
    type: string
    description: "Codacy product"
    example: "coverage"
    enum:
      - quality
      - coverage

  AccountProvider:
    type: string
    x-ms-enum: &accountProviderEnumName
      name: "AccountProvider"
    enum: &accountProviderEnum
      - github
      - google
      - bitbucket
      - gitlab

  commitUuid:
    description: UUID or SHA string that identifies the commit
    type: string
    x-example: "2957025d42e8daadf937d4044516f991d21deea4"

  CommitUuidRequest:
    type: object
    required:
      - commitUuid
    properties:
      commitUuid:
        $ref: '#/definitions/commitUuid'

  JoinMode:
    type: string
    x-ms-enum:
      name: "JoinMode"
    enum:
      - auto
      - adminAuto
      - request

  JoinModeRequest:
    type: object
    required:
      - joinMode
    properties:
      joinMode:
        $ref: '#/definitions/JoinMode'

  JoinStatus:
    type: string
    x-ms-enum:
      name: "JoinStatus"
    enum:
      - member
      - pendingMember
      - remoteMember

  SeverityLevel:
    type: string
    description: "Issue severity level. (These values map to our UI as follows: Info->Minor, Warning->Medium, Error->Critical)"
    example: "Error"
    x-ms-enum:
      name: "SeverityLevel"
    enum:
      - Info
      - Warning
      - Error

  JoinResponse:
    type: object
    required:
      - organizationIdentifier
      - joinStatus
    properties:
      organizationIdentifier:
        type: integer
        format: int64
      joinStatus:
        $ref: '#/definitions/JoinStatus'

  RequestToJoin:
    type: object
    required:
      - email
      - name
      - creationDate
    properties:
      email:
        type: string
        example: "mail@mail.com"
      name:
        type: string
        example: "a display name"
      numberOfCommits:
        type: integer
        format: int32
      numberOfRepositories:
        type: integer
        format: int32
      lastActivity:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2020-01-06T14:29:13.430Z"
      creationDate:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2020-01-06T14:29:13.430Z"

  ListRequestsToJoinResponse:
    type: object
    required:
      - data
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/RequestToJoin"

  UserRole:
    type: string
    x-ms-enum:
      name: "UserRole"
    enum:
      - admin
      - manager
      - member

  Permission:
    type: string
    x-ms-enum:
      name: "Permission"
    enum:
      - admin
      - write
      - read

  AnalysisAction:
    type: string
    x-ms-enum:
      name: "AnalysisAction"
    enum:
      - clone
      - createTasks
      - runMetrics
      - runPatterns
      - createOverviews

  FirstAnalysisOverview:
    type: object
    required:
      - action
      - complete
    properties:
      action:
        $ref: "#/definitions/AnalysisAction"
      complete:
        type: boolean
        example: false

  FirstAnalysisOverviewResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/FirstAnalysisOverview"

  OrganizationType:
    type: string
    description: "The type of Organization"
    example: "Organization"
    x-ms-enum:
      name: "OrganizationType"
    enum:
      - Account
      - Organization

  HealthCheck:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        example: "Hello, it's me"

  HealthCheckResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/HealthCheck"

  PaginationInfo:
    type: object
    description: Cursor-based pagination information to obtain more items
    properties:
      cursor:
        type: string
        description: >-
          Cursor to [request the next batch of results](https://docs.codacy.com/codacy-api/using-the-codacy-api/#using-pagination)
      limit:
        type: integer
        format: int32
        description: Maximum number of items returned
      total:
        type: integer
        format: int32
        description: Total number of items returned

  PaymentProvider:
    type: string
    enum:
      - stripe
      - chargebee
      - direct
      - github

  User:
    type: object
    required:
      - id
      - mainEmail
      - otherEmails
      - isAdmin
      - isActive
      - created
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: "Foo"
      mainEmail:
        type: string
        example: "main@codacy.com"
      otherEmails:
        type: array
        items:
          type: string
        example: [ "foo@bar.com" ]
      isAdmin:
        type: boolean
        example: false
      isActive:
        type: boolean
        example: true
      created:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2019-05-07T14:29:13.430Z"
      intercomHash:
        type: string
        example: "userhash"
      shouldDoClientQualification:
        type: boolean
        example: false

  UserResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/User"

  UserBody:
    type: object
    properties:
      name:
        type: string
        example: "Foo"
      shouldDoClientQualification:
        type: boolean
        example: false

  Organization:
    type: object
    required:
      - name
      - provider
      - type
      - remoteIdentifier
      - singleProviderLogin
    properties:
      identifier:
        type: integer
        format: int64
      remoteIdentifier:
        type: string
      name:
        type: string
        example: "FooOrganization"
      avatar:
        type: string
        example: "someRandomLink.com"
      created:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2019-05-07T14:29:13.430Z"
      provider:
        $ref: '#/definitions/Provider'
      joinMode:
        $ref: '#/definitions/JoinMode'
      type:
        $ref: '#/definitions/OrganizationType'
      joinStatus:
        $ref: '#/definitions/JoinStatus'
      singleProviderLogin:
        type: boolean

  AddOrganizationResponse:
    type: object
    required:
      - organization
    properties:
      organization:
        $ref: "#/definitions/Organization"
      warnings:
        type: array
        items:
          type: string

  OrganizationListResponse:
    type: object
    required:
      - data
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/Organization"

  Membership:
    type: object
    required:
      - userRole
    properties:
      userRole:
        $ref: "#/definitions/UserRole"

  Billing:
    type: object
    required:
      - isPremium
      - model
    properties:
      isPremium:
        type: boolean
        example: true
        description: Deprecated, use subscriptions.plan.isPremium instead.
      model:
        type: string
        example: "Auto"
        enum:
          - Auto
          - Manual
      code:
        type: string
        example: "trial"
        description: Deprecated, use subscriptions.plan.code instead.
      monthly:
        type: boolean
        example: true
      price:
        type: integer
        format: int64
        example: 1000
      pricedPerUser:
        type: boolean
        example: true

  OrganizationBillingInformation:
    type: object
    required:
      - numberOfSeats
      - numberOfPurchasedSeats
      - paymentPlan
      - priceInCents
      - taxes
      - subscriptions
    properties:
      numberOfSeats:
        type: integer
        format: int32
        example: 42
      numberOfPurchasedSeats:
        type: integer
        format: int32
        example: 100
      paymentPlan:
        description: Deprecated, use `subscriptions.plan` instead
        $ref: "#/definitions/Billing"
      paymentGateway:
        $ref: "#/definitions/PaymentProvider"
      priceInCents:
        type: integer
        format: int32
        description: >-
          Final price paid in cents, containing all taxes if there are any.
          For example, 12020 represents $120.20.
        example: 12020
      pricePerSeatInCents:
        type: integer
        format: int32
        description: >-
          Final price paid per seat in cents, containing all taxes if there are any.
          For example, 1405 represents $14.05.
        example: 1405
      nextPaymentDate:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2019-05-07T14:29:13.430Z"
        description: >-
          Next payment date for the plan.
          This field is empty for plans that don't renew automatically.
      invoiceDetails:
        type: object
        required:
          - address
          - email
        properties:
          address:
            description: Invoice address
            type: string
            example: Av. João Crisóstomo, nº31 - 6º, 1050-125 Lisboa
          email:
            description: Invoice email address
            type: string
            format: email
            example: codacy@codacy.com
      taxes:
        description: >-
          Taxes included in the final price priceInCents.
        type: array
        items:
          $ref: '#/definitions/Tax'
      subscriptions:
        type: array
        items:
          $ref: '#/definitions/OrganizationProductBillingPlan'

  OrganizationBillingInformationResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/OrganizationBillingInformation"

  Tax:
    type: object
    required:
      - name
      - rate
    properties:
      name:
        description: Name of the tax
        type: string
      rate:
        description: Rate of the tax
        type: number
        format: double

  OrganizationProductBillingPlan:
    type: object
    required:
      - product
    properties:
      product:
        $ref: "#/definitions/CodacyProduct"
      plan:
        $ref: "#/definitions/Billing"

  OrganizationPaywall:
    type: object
    required:
      - organizationDashboard
    properties:
      organizationDashboard:
        type: boolean
        example: true

  ProductPaywall:
    type: object
    required:
      - securityDashboard
    properties:
      securityDashboard:
        type: boolean
        example: true

  Paywall:
    type: object
    description: Deprecated, use ProductPaywall and OrganizationPaywall instead.
    required:
      - organizationDashboard
      - securityDashboard
    properties:
      organizationDashboard:
        type: boolean
        example: true
        description: Deprecated, use OrganizationPaywall instead.
      securityDashboard:
        type: boolean
        example: true
        description: Deprecated, use subscriptions.paywall.securityDashboard instead.

  OrganizationWithMeta:
    type: object
    required:
      - organization
      - membership
      - analysisConfigurationMinimumPermission
      - subscriptions
    properties:
      organization:
        $ref: "#/definitions/Organization"
      membership:
        $ref: "#/definitions/Membership"
      billing:
        $ref: "#/definitions/Billing"
      paywall:
        $ref: "#/definitions/Paywall"
      organizationPayWall:
        $ref: "#/definitions/OrganizationPaywall"
      analysisConfigurationMinimumPermission:
        $ref: "#/definitions/Permission"
      subscriptions:
        type: array
        items:
          $ref: "#/definitions/ProductSubscription"

  ProductSubscription:
    type: object
    required:
      - product
    properties:
      product:
        $ref: "#/definitions/CodacyProduct"
      plan:
        $ref: "#/definitions/OrganizationBillingPlan"
      paywall:
        $ref: "#/definitions/ProductPaywall"

  OrganizationBillingPlan:
    type: object
    required:
      - isPremium
      - code
    properties:
      isPremium:
        type: boolean
      code:
        type: string

  OrganizationWithMetaResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/OrganizationWithMeta"

  Integration:
    type: object
    required:
      - provider
      - lastAuthenticated
    properties:
      provider:
        $ref: "#/definitions/AccountProvider"
      lastAuthenticated:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2019-05-07T14:29:13.430Z"

  IntegrationListResponse:
    type: object
    required:
      - data
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/Integration"

  RepositorySummary:
    description: Essential information to describe a repository.
    type: object
    required:
      - provider
      - owner
      - name
    properties:
      repositoryId:
        type: integer
        format: int64
        description: Codacy identifier for this repository.
        example: 45738
      provider:
        $ref: '#/definitions/Provider'
      owner:
        type: string
        description: Name of the organization that owns the repository.
        example: "codacy"
      name:
        type: string
        description: Name of the repository.
        example: "codacy-eslint"

  Repository:
    allOf:
      - $ref: '#/definitions/RepositorySummary'
      - type: object
        required:
          - visibility
          - problems
          - languages
          - addedState
        properties:
          fullPath:
            type: string
            description: "Full path of the repository on the Git provider"
            example: "codacy/codacy-eslint"
          visibility:
            $ref: "#/definitions/Visibility"
          remoteIdentifier:
            type: string
            description: "Unique identifier of the repository on the Git provider"
            example: "3"
          lastUpdated:
            type: string
            format: date-time
            x-scala-type: java.time.Instant
            description: "Timestamp when the repository was last updated, [depending on the Git provider](https://docs.codacy.com/organizations/organization-overview/#last-updated-repositories)"
            example: "2019-05-07T14:29:13.430Z"
          permission:
            $ref: "#/definitions/Permission"
          problems:
            type: array
            items:
              $ref: "#/definitions/RepositoryProblem"
          languages:
            type: array
            description: List of the languages in the repository
            items:
              type: string
            example: [ "Java", "Scala", "CSS" ]
          defaultBranch:
            $ref: "#/definitions/Branch"
          badges:
            $ref: "#/definitions/Badges"
          codingStandardId:
            type: integer
            format: int64
            description: Coding Standard identifier
          codingStandardName:
            type: string
            description: Coding Standard name
          addedState:
            $ref: "#/definitions/AddedState"
          gatePolicyId:
            type: integer
            format: int64
            description: Identifier of the gate policy the repository is following. If not defined, the repository doesn't follow a gate policy.
          gatePolicyName:
            type: string
            description: Name of the gate policy the repository is following. Present only if the gatePolicyId is defined.

  AddedState:
    type: string
    description: "Added state of the repository on Codacy. The possible values are `NotAdded` (the repository wasn't added to Codacy), `Added` (the repository was added to Codacy), or `Following` (the current user is following a repository added to Codacy)."
    example: "Added"
    x-ms-enum:
      name: "AddedState"
    enum:
      - NotAdded
      - Added
      - Following

  AddedStateResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/AddedState"

  Badges:
    type: object
    required:
      - grade
      - coverage
    properties:
      grade:
        type: string
        description: "Repository grade badge URL"
        example: "https://app.codacy.com/project/badge/Grade/d992a862b1994805907ec277e16b0fda"
      coverage:
        type: string
        description: "Repository coverage badge URL"
        example: "https://app.codacy.com/project/badge/Coverage/d992a862b1994805907ec277e16b0fda"

  RepositoryResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/Repository"

  Commit:
    allOf:
      - $ref: "#/definitions/CommitIdentification"
      - type: object
        required:
          - id
          - commitTimestamp
        properties:
          id:
            type: integer
            format: int64
            description: "Internal commit identifier"
            example: 1
          commitTimestamp:
            type: string
            format: date-time
            x-scala-type: java.time.Instant
            description: "Timestamp when the commit was created"
            example: "2019-05-07T14:29:13.430Z"
          authorName:
            type: string
            description: "Name of the commit author"
          authorEmail:
            type: string
            description: "Email address of the commit author"
          message:
            type: string
            description: "Commit message"
          startedAnalysis:
            type: string
            format: date-time
            x-scala-type: java.time.Instant
            description: "Timestamp when Codacy started the last analysis of the commit"
            example: "2022-01-07T14:29:13.430Z"
          endedAnalysis:
            type: string
            format: date-time
            x-scala-type: java.time.Instant
            description: "Timestamp when Codacy finished the last analysis of the commit"
            example: "2022-01-07T14:29:13.430Z"
          isMergeCommit:
            type: boolean
            description: True if the commit is a merge commit
            example: false
          gitHref:
            type: string
            description: URL to the commit on the Git provider
            example: "https://github.com/codacy/tools-for-code-review-engineers/commit/370b160aaf0ed781d707d335aa1fde20cefeabf2"
          parents:
            type: array
            items:
              type: string
              description: SHA-1 hashes of the parents of the commit

  CommitWithAnalysis:
    type: object
    required:
      - commit
      - meta
    properties:
      commit:
        $ref: "#/definitions/Commit"
      coverage:
        $ref: "#/definitions/CoverageAnalysis"
      quality:
        $ref: "#/definitions/QualityAnalysis"
      meta:
        description: Commit analysis information
        $ref: "#/definitions/AnalysisMeta"

  CommitWithAnalysisListResponse:
    type: object
    required:
      - data
    properties:
      pagination:
        $ref: '#/definitions/PaginationInfo'
      data:
        type: array
        items:
          $ref: '#/definitions/CommitWithAnalysis'

  CommitWithBranches:
    allOf:
      - $ref: "#/definitions/Commit"
      - type: object
        properties:
          branches:
            type: array
            description: "List of branches containing the commit"
            items:
              $ref: "#/definitions/Branch"

  FileAnalysisListResponse:
    type: object
    description: List of files with analysis results changes between two commits
    properties:
      pagination:
        $ref: '#/definitions/PaginationInfo'
      data:
        type: array
        items:
          $ref: '#/definitions/FileDeltaAnalysis'

  FileDeltaAnalysis:
    type: object
    description: File with analysis results changes between two commits
    required:
      - file
    properties:
      file:
        $ref: "#/definitions/FileMetadata"
      coverage:
        $ref: "#/definitions/FileDeltaCoverageAnalysis"
      quality:
        $ref: "#/definitions/FileDeltaQualityAnalysis"
      comparedWithCommit:
        type: object
        description: Original analysis results for the file
        required:
          - commitId
          - commitSha
        properties:
          commitId:
            type: integer
            format: int64
            example: 1
          coverage:
            type: object
            properties:
              totalCoverage:
                type: number
                multipleOf: 0.01
                format: double
                description: Total coverage of the commit
                example: 82.35

  FileDeltaCoverageAnalysis:
    type: object
    description: Coverage changes for a file between two commits
    properties:
      deltaCoverage:
        type: number
        multipleOf: 0.01
        format: double
        description: Difference in code coverage percentage when compared to the parent commit
        example: -2.35
      totalCoverage:
        type: number
        multipleOf: 0.01
        format: double
        description: The total coverage percentage for a given commit
        example: -2.35

  FileDeltaQualityAnalysis:
    type: object
    description: Quality changes for a file between two commits
    required:
      - deltaNewIssues
      - deltaFixedIssues
    properties:
      deltaNewIssues:
        description: Number of issues introduced by the commit
        type: integer
        format: int32
        example: 1
      deltaFixedIssues:
        description: Number of issues fixed by the commit
        type: integer
        format: int32
        example: 1
      deltaComplexity:
        description: Difference in cyclomatic complexity introduced by the commit
        type: integer
        format: int32
        example: 1
      deltaClonesCount:
        description: Difference in number of duplicated blocks of code introduced by the commit
        type: integer
        format: int32
        example: 1

  RepositoryListResponse:
    type: object
    required:
      - data
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/Repository"

  ProblemLink:
    type: object
    required:
      - name
      - url
    properties:
      name:
        type: string
        example: "Check our documentation"
      url:
        type: string
        example: "https://docs.codacy.com/faq/troubleshooting/why-isnt-my-public-repository-being-analyzed/"

  RepositoryProblem:
    type: object
    required:
      - message
      - actions
      - code
      - severity
    properties:
      message:
        type: string
        example: "We can't analyze this repository because none of the committers are part of the organization."
      actions:
        type: array
        items:
          $ref: "#/definitions/ProblemLink"
      code:
        type: string
        description: "A stable identifier for a problem."
        example: "failed_to_clone"
      severity:
        type: string
        description: "The extent to which this problem affects the repository in terms of analysis execution."
        example: "all_analysis"

  RepositoryWithAnalysis:
    type: object
    required:
      - repository
    properties:
      lastAnalysedCommit:
        $ref: "#/definitions/Commit"
      grade:
        type: integer
        format: int32
        description: Quality grade of the file as a number between 100 (highest grade) and 0 (lowest grade)
        example: 74
      gradeLetter:
        type: string
        description: Quality grade of the file as a letter between A (highest grade) and F (lowest grade)
        example: A
      issuesPercentage:
        type: integer
        format: int64
        example: 1
      complexFilesPercentage:
        type: integer
        format: int64
        example: 1
      duplicationPercentage:
        type: integer
        format: int64
        example: 1
      repository:
        $ref: "#/definitions/Repository"
      # TODO: Remove after not used anymore
      branch:
        $ref: "#/definitions/Branch"
      selectedBranch:
        $ref: "#/definitions/Branch"
      coverage:
        $ref: "#/definitions/Coverage"

  RepositoryWithAnalysisResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/RepositoryWithAnalysis"

  RepositoryWithAnalysisListResponse:
    type: object
    required:
      - data
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/RepositoryWithAnalysis"

  PullRequestOwner:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        example: "Foo"
      avatarUrl:
        type: string
        example: "https://example.com/foo"
      username:
        type: string
        example: "foo.bar"
      email:
        type: string
        example: "foobar@example.com"

  PullRequest:
    type: object
    required:
      - id
      - number
      - updated
      - status
      - repository
      - title
      - owner
      - gitHref
      - headCommitSha
      - commonAncestorCommitSha
    properties:
      id:
        type: integer
        format: int64
        example: 1
      number:
        type: integer
        format: int32
        example: 1
      updated:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2019-05-07T14:29:13.430Z"
      status:
        type: string
        description: Pull request status
        example: "open"
      repository:
        type: string
        example: "awesome-repository"
      title:
        type: string
        example: "Amazing pull request"
      owner:
        $ref: "#/definitions/PullRequestOwner"
      headCommitSha:
        type: string
        example: "2957025d42e8daadf937d4044516f991d21deea4"
      commonAncestorCommitSha:
        type: string
        example: "3357025d42e8daadf937d4044516f991d21deea4"
      originBranch:
        type: string
        example: "feat-branch"
      targetBranch:
        type: string
        example: "master"
      gitHref:
        type: string
        description: URL to the pull request on the Git provider
        example: "https://github.com/..."

  DiffCoverage:
    type: object
    required:
      - cause
    properties:
      value:
        description: Coverage value of the lines added or modified by the pull request
        type: number
        multipleOf: 0.01
        format: double
        example: 71.00
      coveredLines:
        description: Number of covered lines from the lines added or modified by the pull request
        type: integer
        format: int32
        example: 11
      coverableLines:
        description: Number of coverable lines from the lines added or modified by the pull request
        type: integer
        format: int32
        example: 21
      cause:
        type: string
        description: "Rationale for diffCoverage value interpretation"
        example: "NoCoverableLines"
        x-ms-enum:
          name: "DiffCoverageReason"
        enum:
          - ValueIsPresent
          - NoCoverableLines
          - MissingRequirements

  AnalysisMeta:
    type: object
    required:
      - analyzable
    properties:
      analyzable:
        type: boolean
      reason:
        type: string

  QualityAnalysis:
    type: object
    properties:
      newIssues:
        description: Number of issues introduced by the pull request or commit
        type: integer
        format: int32
        example: 1
      fixedIssues:
        description: Number of issues fixed by the pull request or commit
        type: integer
        format: int32
        example: 1
      deltaComplexity:
        description: Difference in cyclomatic complexity introduced by the pull request or commit
        type: integer
        format: int32
        example: 1
      deltaClonesCount:
        description: Difference in number of duplicated blocks of code introduced by the pull request or commit
        type: integer
        format: int32
        example: 1
      isUpToStandards:
        description: True if metrics are at or above gate thresholds
        type: boolean
        example: true
      resultReasons:
        description: Reasons for the results of quality analysis
        type: array
        items:
          $ref: "#/definitions/AnalysisResultReason"

  PullRequestCoverage:
    type: object
    properties:
      deltaCoverage:
        description: Difference between the coverage of the head commit and common ancestor commit of the pull request
        type: number
        multipleOf: 0.01
        format: double
        example: 71.00
      diffCoverage:
        description: Coverage of the lines added or modified by the pull request
        $ref: "#/definitions/DiffCoverage"
      isUpToStandards:
        description: True if coverage metrics are at or above gate thresholds
        type: boolean
        example: true
      resultReasons:
        description: Reasons for the results of coverage analysis
        type: array
        items:
          $ref: "#/definitions/AnalysisResultReason"

  PullRequestWithCoverageResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/PullRequestWithCoverage"

  PullRequestWithCoverage:
    type: object
    required:
      - pullRequest
      - coverage
    properties:
      pullRequest:
        $ref: "#/definitions/PullRequest"
      coverage:
        description: Coverage information for a pull request
        $ref: "#/definitions/PullRequestCoverage"

  PullRequestFilesCoverageResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/FileDiffCoverage"

  FileDiffCoverage:
    type: object
    required:
      - fileName
      - diffLineHits
    properties:
      fileName:
        type: string
      diff:
        $ref: "#/definitions/DiffCoverage"
      diffLineHits:
        type: array
        items:
          $ref: "#/definitions/DiffLineHit"

  DiffLineHit:
    type: object
    required:
      - lineNumber
      - hits
    properties:
      lineNumber:
        type: string
      hits:
        type: integer
        format: int64

  PullRequestWithAnalysis:
    type: object
    required:
      - pullRequest
      - isAnalysing
      - meta
    properties:
      isUpToStandards:
        description: True if metrics are at or above gate thresholds
        type: boolean
        example: true
      isAnalysing:
        type: boolean
        example: false
      pullRequest:
        $ref: "#/definitions/PullRequest"
      newIssues:
        description: Number of issues introduced by the pull request
        type: integer
        format: int32
        example: 1
      fixedIssues:
        description: Number of issues fixed by the pull request
        type: integer
        format: int32
        example: 1
      deltaComplexity:
        description: Difference in cyclomatic complexity introduced by the pull request
        type: integer
        format: int32
        example: 1
      deltaClonesCount:
        description: Difference in number of duplicated blocks of code introduced by the pull request
        type: integer
        format: int32
        example: 1
      deltaCoverageWithDecimals:
        type: number
        multipleOf: 0.01
        format: double
        description: Deprecated, use `coverage` instead
        example: 71.00
      deltaCoverage:
        description: Deprecated, use `coverage` instead
        type: integer
        format: int32
        example: 1
      diffCoverage:
        description: Deprecated, use `coverage` instead
        type: number
        multipleOf: 0.01
        format: double
        example: 71.00
      coverage:
        description: Coverage information for a pull request
        $ref: "#/definitions/PullRequestCoverage"
      quality:
        description: Quality information for a pull request
        $ref: "#/definitions/QualityAnalysis"
      meta:
        description: Pull Request analysis information
        $ref: "#/definitions/AnalysisMeta"

  PullRequestWithAnalysisListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/PullRequestWithAnalysis"
      pagination:
        $ref: "#/definitions/PaginationInfo"

  CategoryIssues:
    type: object
    required:
      - categoryId
      - numberOfIssues
    properties:
      categoryId:
        type: integer
        format: int64
        example: 1
      numberOfIssues:
        type: integer
        format: int64
        example: 100

  CommitAnalysisStats:
    type: object
    required:
      - repositoryId
      - commitId
      - numberIssues
      - numberLoc
      - issuesPerCategory
      - issuePercentage
      - techDebt
      - totalFilesAdded
      - totalFilesRemoved
      - totalFilesChanged
      - commitAuthorName
      - commitTimestamp
      - commitShortUUID
    properties:
      repositoryId:
        type: integer
        format: int64
        example: 1
      commitId:
        type: integer
        format: int64
        example: 1
      numberIssues:
        type: integer
        format: int64
        example: 1
      numberLoc:
        type: integer
        format: int64
        example: 1
      issuesPerCategory:
        type: array
        items:
          $ref: "#/definitions/CategoryIssues"
      issuePercentage:
        type: integer
        format: int64
        example: 1
      totalComplexity:
        type: integer
        format: int64
        example: 1
      numberComplexFiles:
        type: integer
        format: int64
        example: 1
      complexFilesPercentage:
        type: integer
        format: int64
        example: 1
      filesChangedToIncreaseComplexity:
        type: integer
        format: int64
        example: 1
      numberDuplicatedLines:
        type: integer
        format: int64
        example: 1
      duplicationPercentage:
        type: integer
        format: int64
        example: 1
      coveragePercentage:
        type: integer
        format: int64
        example: 1
        description: >-
          Test coverage percentage, truncated.
          Present only if a coverage report was processed for this commit.
      coveragePercentageWithDecimals:
        type: number
        format: double
        example: 15.25
        description: >-
          Test coverage percentage.
          Present only if a coverage report was processed for this commit.
      numberFilesUncovered:
        type: integer
        format: int64
        example: 1
      techDebt:
        type: integer
        format: int64
        example: 1
      totalFilesAdded:
        type: integer
        format: int64
        example: 1
      totalFilesRemoved:
        type: integer
        format: int64
        example: 1
      totalFilesChanged:
        type: integer
        format: int64
        example: 1
      commitTimestamp:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2019-05-07T14:29:13.430Z"
      commitAuthorName:
        type: string
        example: "Mike The Developer"
      commitShortUUID:
        type: string
        example: "00d3079ed"

  CommitAnalysisStatsListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/CommitAnalysisStats"

  PatternDetails:
    type: object
    description: Details of the pattern that was identified in the issue
    required:
      - id
      - category
      - level
      - severityLevel
    properties:
      id:
        type: string
        description: Pattern identifier (unique per tool)
        example: accessor-pairs
      title:
        type: string
        description: Pattern title
      category:
        type: string
        description: Pattern category
        example: Security
      subCategory:
        type: string
        description: Pattern subcategory (optional since some patterns might not have a subcategory)
        example: XSS
      level:
        type: string
        description: Deprecated, use `severityLevel` instead
        example: "Error"
        x-ms-enum:
          name: "SeverityLevel"
        enum:
          - Info
          - Warning
          - Error
      severityLevel:
        $ref: "#/definitions/SeverityLevel"

  ToolReference:
    type: object
    description: Details of the tool that found the issue
    required:
      - uuid
      - name
    properties:
      uuid:
        type: string
        description: Tool unique identifier
        example: 847feb32-9ff2-11ea-bb37-0242ac130002
      name:
        type: string
        description: Name of the tool
        example: ESLint

  CommitIdentification:
    type: object
    required:
      - sha
    properties:
      sha:
        type: string
        description: Commit SHA

  CommitReference:
    description: >-
      Details of the commit that introduced the issue or null if the issue was introduced in a commit that
      Codacy didn't analyze
    allOf:
      - $ref: "#/definitions/CommitIdentification"
      - type: object
        properties:
          commiter:
            type: string
            description: Email address of the author of the commit
          commiterName:
            type: string
            description: Name of the author of the commit
          timestamp:
            type: string
            format: date-time
            x-scala-type: java.time.Instant
            description: Time and date of the commit
            example: "2019-05-07T14:29:13.430Z"

  CommitIssue:
    type: object
    description: Issue details including the commit that originated the issue
    required:
      - issueId
      - resultDataId
      - filePath
      - fileId
      - patternInfo
      - toolInfo
      - lineNumber
      - message
      - language
      - lineText
    properties:
      issueId:
        description: ID of the Issue
        type: string
      resultDataId:
        description: Stable ID for the issue.
        type: integer
        format: int64
      filePath:
        description: Path of the file where the issue was found
        type: string
      fileId:
        type: integer
        format: int64
      patternInfo:
        $ref: '#/definitions/PatternDetails'
      toolInfo:
        $ref: '#/definitions/ToolReference'
      lineNumber:
        description: Line where the issue was found
        type: integer
        format: int64
      message:
        description: Detailed cause of the issue
        type: string
      suggestion:
        description: The suggested fix for the issue
        type: string
      language:
        description: Language of the file where the issue was found
        type: string
      lineText:
        description: Contents of the line where the issue was found
        type: string
      commitInfo:
        $ref: '#/definitions/CommitReference'

  DeltaType:
    type: string
    description: "Specifies if the issue was added or fixed by the commit"
    example: "Added"
    x-ms-enum:
      name: "DeltaType"
    enum:
      - Added
      - Fixed

  CommitDeltaIssue:
    type: object
    description: Details of an issue that was added or fixed by a commit
    required:
      - commitIssue
      - deltaType
    properties:
      commitIssue:
        $ref: '#/definitions/CommitIssue'
      deltaType:
        $ref: '#/definitions/DeltaType'

  CommitDeltaIssuesResponse:
    type: object
    description: List of issues added or fixed on a commit
    required:
      - analyzed
      - data
    properties:
      analyzed:
        description: True if Codacy already analyzed the commit
        type: boolean
      data:
        description: List of issues added or fixed on a commit or an empty list if Codacy didn't analyze the commit yet.
        type: array
        items:
          $ref: '#/definitions/CommitDeltaIssue'
      pagination:
        $ref: '#/definitions/PaginationInfo'

  IssueStatus:
    type: string
    description: "Issue resolution status"
    example: "all"
    x-ms-enum: &issueStatusEnumName
      name: "IssueStatus"
    enum: &issueStatusEnum
      - all
      - new
      - fixed

  IgnoredIssue:
    type: object
    description: Ignored issue details including the commit that originated the issue
    required:
      - issueId
      - filePath
      - patternInfo
      - toolInfo
      - message
      - language
      - lineText
    properties:
      issueId:
        description: ID of the Issue
        type: string
      filePath:
        description: Path of the file where the issue was found and ignored
        type: string
      fileId:
        type: integer
        format: int64
      patternInfo:
        $ref: '#/definitions/PatternDetails'
      toolInfo:
        $ref: '#/definitions/ToolReference'
      lineNumber:
        description: Line where the issue was found
        type: integer
        format: int64
      message:
        description: Detailed cause of the ignored issue
        type: string
      language:
        description: Language of the file where the ignored issue was found
        type: string
      lineText:
        description: Contents of the line where the ignored issue was found
        type: string
      commitInfo:
        $ref: '#/definitions/CommitReference'

  IgnoredIssuesListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/IgnoredIssue'
      pagination:
        $ref: '#/definitions/PaginationInfo'

  SearchRepositoryIssuesListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/CommitIssue'
      pagination:
        $ref: '#/definitions/PaginationInfo'

  GetIssueResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/CommitIssue'

  CommitDeltaStatistics:
    type: object
    description: Delta quality metrics for a commit
    required:
      - commitUuid
      - newIssues
      - fixedIssues
      - analyzed
    properties:
      commitUuid:
        description: Unique identifier of the commit
        type: string
      newIssues:
        description: Number of issues introduced by the commit
        type: integer
        format: int32
      fixedIssues:
        description: Number of issues fixed by the commit
        type: integer
        format: int32
      deltaComplexity:
        description: Difference in cyclomatic complexity when compared to the previous commit
        type: integer
        format: int32
      deltaCoverage:
        description: Difference in code coverage percentage when compared to the previous commit
        type: integer
        format: int32
      deltaCoverageWithDecimals:
        description: Difference in code coverage with decimals percentage when compared to the previous commit
        type: number
        multipleOf: 0.01
        format: double
        example: 71.00
      deltaClonesCount:
        description: Difference in number of duplicated blocks of code when compared to the previous commit
        type: integer
        format: int32
      analyzed:
        description: True if the commit was already analyzed by Codacy
        type: boolean

  IssuesOverviewResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/IssuesOverview'

  IssuesOverview:
    type: object
    description: Overview of the issues in a repository
    required:
      - counts
    properties:
      counts:
        $ref: '#/definitions/IssuesOverviewCounts'

  IssuesOverviewCounts:
    type: object
    description: Overview of the issues in a repository
    required:
      - categories
      - languages
      - levels
      - patterns
      - authors
    properties:
      categories:
        type: array
        description: Number of issues per category
        items:
          $ref: '#/definitions/Count'
      languages:
        type: array
        description: Number of issues per language
        items:
          $ref: '#/definitions/Count'
      levels:
        type: array
        description: Number of issues per severity level
        items:
          $ref: '#/definitions/Count'
      patterns:
        type: array
        description: Number of issues per code pattern
        items:
          $ref: '#/definitions/PatternsCount'
      authors:
        type: array
        description: Number of issues per commit author
        items:
          $ref: '#/definitions/Count'

  Count:
    type: object
    required:
      - name
      - total
    properties:
      name:
        type: string
      total:
        type: integer
        format: int32

  PatternsCount:
    type: object
    description: Number of issues detected by a code pattern
    required:
      - id
      - title
      - total
    properties:
      id:
        type: string
        description: Identifier of the code pattern
      title:
        type: string
        description: Title of the code pattern
      total:
        type: integer
        format: int32
        description: Number of issues detected by the code pattern

  Branch:
    type: object
    required:
      - id
      - name
      - isDefault
      - isEnabled
      - branchType
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "master"
      isDefault:
        type: boolean
        example: true
      isEnabled:
        type: boolean
        example: true
      lastUpdated:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2019-05-07T14:29:13.430Z"
      branchType:
        type: string
        enum:
          - Branch
          - PullRequest
      lastCommit:
        type: string

  BranchListResponse:
    type: object
    required:
      - data
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/Branch"

  UpdateRepositoryBranchConfigurationBody:
    type: object
    description: Configuration of a repository branch
    properties:
      isEnabled:
        type: boolean
        description: True if Codacy should analyze the branch
        example: true

  Coverage:
    type: object
    properties:
      filesUncovered:
        type: integer
        format: int64
        example: 1
      filesWithLowCoverage:
        type: integer
        format: int64
        example: 1
      coveragePercentage:
        type: integer
        format: int64
        example: 1
        description: >-
          Test coverage percentage, truncated. Present only if a coverage report was processed
          for the most recent commit on the relevant branch.
      coveragePercentageWithDecimals:
        type: number
        format: double
        example: 15.25
        description: >-
          Test coverage percentage. Present only if a coverage report was processed
          for the most recent commit on the relevant branch.
      numberTotalFiles:
        type: integer
        format: int32
        example: 1
      numberCoveredLines:
        type: integer
        format: int32
        example: 1
      numberCoverableLines:
        type: integer
        format: int32
        example: 1


  CoverageAnalysis:
    type: object
    properties:
      totalCoveragePercentage:
        type: number
        format: double
        example: 93.23
        description: Total coverage percentage at the requested commit
      deltaCoveragePercentage:
        type: number
        format: double
        example: 15.25
        description: Difference in coverage between two commits, expressed in percentage points
      isUpToStandards:
        type: boolean
        example: true
        description: True if coverage metrics are at or above gate thresholds
      resultReasons:
        description: Reasons for the results of coverage analysis
        type: array
        items:
          $ref: "#/definitions/AnalysisResultReason"

  AnalysisExpectedThreshold:
    type: object
    description: Expected threshold for the given gate
    required:
      - threshold
    properties:
      threshold:
        type: number
        description: Threshold configured for the given gate
      minimumSeverity:
        $ref: "#/definitions/SeverityLevel"

  AnalysisResultReason:
    type: object
    description: Reason for an analysis result for a quality gate
    required:
      - gate
      - expectedThreshold
      - isUpToStandards
    properties:
      gate:
        type: string
        description: Name of the quality gate
      expected:
        type: number
        example: -1
        description: Deprecated, use `expectedThreshold` instead. It is the threshold value configured for the quality gate
      expectedThreshold:
        $ref: "#/definitions/AnalysisExpectedThreshold"
      isUpToStandards:
        type: boolean
        example: true
        description: True if the value passes the quality gate

  UpdateGatePolicyBody:
    type: object
    properties:
      gatePolicyName:
        type: string
        description: Name of the gate policy
      isDefault:
        type: boolean
        description: True if the gate policy is the default for the organization
      settings:
        $ref: "#/definitions/QualityGate"

  QualityGate:
    type: object
    properties:
      issueThreshold:
        type: object
        required:
          - threshold
        properties:
          threshold:
            type: integer
            format: int32
            minimum: 0
            example: 1
          minimumSeverity:
            $ref: "#/definitions/SeverityLevel"
        description: The quality gate will fail if there are new issues of the specified severity over this threshold (if no severity is specified all severity levels are considered). This value cannot be negative
      securityIssueThreshold:
        type: integer
        format: int32
        minimum: 0
        example: 1
        description: The quality gate will fail if the number of new security issues is over this threshold. This value cannot be negative
      duplicationThreshold:
        type: integer
        format: int32
        example: 1
        description: The quality gate will fail if there are new duplicated blocks over this threshold
      coverageThreshold:
        type: integer
        format: int32
        maximum: 1
        example: 1
        description: Deprecated, use `coverageThresholdWithDecimals` instead
      coverageThresholdWithDecimals:
        type: number
        format: double
        example: -0.02
        description: The quality gate will fail if coverage percentage varies less than this threshold. This value should be at most 1.00
      diffCoverageThreshold:
        type: integer
        format: int32
        maximum: 100
        minimum: 0
        example: 70
        description: The quality gate will fail if diff coverage is under this threshold. This value should be at least 0 and at most 100
      complexityThreshold:
        type: integer
        format: int32
        minimum: 0
        example: 1
        description: The quality gate will fail if the complexity value is over this threshold. This value cannot be negative

  RepositoryGatePolicy:
    type: object
    required:
      - id
      - name
    description: Gate policy the repository is following.
    properties:
      id:
        type: integer
        format: int64
        description: Identifier of the gate policy
      name:
        type: string
        description: Name of the gate policy


  QualitySettingsResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/QualitySettingsWithGatePolicy"

  QualitySettingsWithGatePolicy:
    type: object
    required:
      - qualityGate
    properties:
      qualityGate:
        $ref: "#/definitions/QualityGate"
      repositoryGatePolicyInfo:
        $ref: "#/definitions/RepositoryGatePolicy"

  BuildServerAnalysisSettingRequest:
    type: object
    required:
      - buildServerAnalysisSetting
    properties:
      buildServerAnalysisSetting:
        type: boolean
        description: |
          If true, Codacy waits for your build server to upload the results of the local analysis before resuming the analysis of your commits.
          If false, Codacy analyzes your commits directly on its cloud infrastructure.

  BuildServerAnalysisSettingResponse:
    type: object
    required:
      - buildServerAnalysisSetting
    properties:
      buildServerAnalysisSetting:
        type: boolean
        description: |
          If true, Codacy waits for your build server to upload the results of the local analysis before resuming the analysis of your commits.
          If false, Codacy analyzes your commits directly on its cloud infrastructure.

  CheckSubmodulesResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: boolean
        description: True if the submodules option is enabled for the organization, false otherwise.

  SyncProviderSettingResponse:
    type: object
    required:
      - name
      - visibility
    properties:
      name:
        type: string
        description: "Name of the repository"
        example: "codacy-eslint"
      visibility:
        $ref: "#/definitions/Visibility"

  SyncProviderSettingOrganizationResponse:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: "Synced name of the organization"
        example: "troubleshoot-codacy"

  SshKeySettingResponse:
    type: object
    required:
      - publicSshKey
    properties:
      publicSshKey:
        type: string
        description: "Public SSH key"

  DeprecatedRepositoryQualitySettings:
    type: object
    properties:
      issueThreshold:
        type: integer
        format: int32
        example: 1
        description: The repository will be considered unhealthy if the percentage of issues is over this threshold
      duplicationThreshold:
        type: integer
        format: int32
        example: 1
        description: The repository will be considered unhealthy if the percentage of duplication of files is over this threshold
      coverageThreshold:
        type: integer
        format: int32
        example: 1
        description: The repository will be considered unhealthy if the coverage percentage is under this threshold
      complexityThreshold:
        type: integer
        format: int32
        example: 1
        description: The repository will be considered unhealthy if the percentage of complexity of files is over this threshold
      fileDuplicationThreshold:
        type: integer
        format: int32
        example: 1
        description: A file in this repository will be considered duplicated when the number of cloned blocks is over this threshold
      fileComplexityThreshold:
        type: integer
        format: int32
        example: 1
        description: A file in this repository will be considered complex when its complexity value is over this threshold

  RepositoryQualitySettings:
    type: object
    properties:
      maxIssuePercentage:
        type: integer
        format: int32
        example: 1
        description: The repository will be considered unhealthy if the percentage of issues is over this threshold
      maxDuplicatedFilesPercentage:
        type: integer
        format: int32
        example: 1
        description: The repository will be considered unhealthy if the percentage of duplication of files is over this threshold
      minCoveragePercentage:
        type: integer
        format: int32
        example: 1
        description: The repository will be considered unhealthy if the coverage percentage is under this threshold
      maxComplexFilesPercentage:
        type: integer
        format: int32
        example: 1
        description: The repository will be considered unhealthy if the percentage of complexity of files is over this threshold
      fileDuplicationBlockThreshold:
        type: integer
        format: int32
        example: 1
        minimum: 0
        description: A file in this repository will be considered duplicated when the number of cloned blocks is over this threshold. This value cannot be negative
      fileComplexityValueThreshold:
        type: integer
        format: int32
        example: 1
        minimum: 0
        description: A file in this repository will be considered complex when its complexity value is over this threshold. This value cannot be negative

  DeprecatedRepositoryQualitySettingsResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/DeprecatedRepositoryQualitySettings"

  RepositoryQualitySettingsResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/RepositoryQualitySettings"

  ApiToken:
    type: object
    description: API token string value and ID
    required:
      - id
      - token
    properties:
      id:
        type: integer
        format: int64
      token:
        type: string

  ApiTokenResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: "#/definitions/ApiToken"

  ApiTokenListResponse:
    type: object
    description: List of API tokens
    required:
      - data
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/ApiToken"

  ProviderIntegration:
    type: object
    required:
      - provider
      - redirectUrl
    properties:
      provider:
        $ref: "#/definitions/AccountProvider"
      redirectUrl:
        type: string

  ProviderIntegrationListResponse:
    type: object
    required:
      - data
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/ProviderIntegration"

  ConfiguredLoginIntegration:
    type: object
    required:
      - provider
      - loginUrl
    properties:
      provider:
        $ref: "#/definitions/AccountProvider"
      loginUrl:
        type: string

  ConfiguredLoginIntegrationListResponse:
    type: object
    required:
      - data
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/ConfiguredLoginIntegration"

  ConfigurationStatus:
    type: object
    required:
      - title
      - category
      - errors
    properties:
      title:
        type: string
      category:
        $ref: "#/definitions/ConfigurationStatusCategory"
      errors:
        type: array
        items:
          type: string
      link:
        type: string

  ConfigurationStatusResponse:
    type: object
    required:
      - statuses
      - metadata
    properties:
      statuses:
        type: array
        items:
          $ref: "#/definitions/ConfigurationStatus"
      metadata:
        type: object
        required:
          - firstSignupDone
        properties:
          firstSignupDone:
            type: boolean

  Reason:
    type: object
    required:
      - title
      - notes
    properties:
      title:
        type: string
      notes:
        type: array
        items:
          type: string

  ChurnFeedback:
    type: object
    required:
      - joinReason
      - cancelReason
    properties:
      joinReason:
        $ref: "#/definitions/Reason"
      cancelReason:
        $ref: "#/definitions/Reason"

  Category:
    type: object
    required:
      - categoryType
      - name
      - description
    properties:
      categoryType:
        type: string
      name:
        type: string
      description:
        type: string

  CategoryOverview:
    type: object
    required:
      - commitId
      - category
      - percentage
      - totalResults
    properties:
      commitId:
        type: integer
        format: int64
        example: 1
      category:
        $ref: "#/definitions/Category"
      percentage:
        type: number
        format: double
        example: 1.6
      totalResults:
        type: integer
        format: int64
        example: 1

  CategoryOverviewListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/CategoryOverview"

  License:
    type: object
    required:
      - numberOfSeats
      - email
      - expirationDate
    properties:
      numberOfSeats:
        type: integer
        format: int32
        example: 100
      email:
        type: string
        example: "name@domain.com"
      expirationDate:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2019-05-07T14:29:13.430Z"
      inactivityThreshold:
        type: integer
        format: int32
        example: 4
      autoAddAuthors:
        type: boolean
      allowSeatsOverflow:
        type: boolean

  LicenseResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: string

  DormantAccountInfo:
    type: object
    required:
      - email
    properties:
      email:
        type: string
        description: "Email address of the deleted account"

  DeleteDormantAccountsResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/DormantAccountInfo'

  AddRepositoryBody:
    type: object
    required:
      - repositoryFullPath
      - provider
    properties:
      repositoryFullPath:
        type: string
        description: "Full path of the repository on the Git provider, starting at the organization. Separate each segment of the path with a slash (/)."
        example: "codacy/codacy-analysis-cli"
      provider:
        $ref: "#/definitions/Provider"

  AddOrganizationBody:
    type: object
    required:
      - provider
      - remoteIdentifier
      - name
      - type
    properties:
      provider:
        $ref: "#/definitions/Provider"
      remoteIdentifier:
        type: string
      name:
        type: string
        example: "FooOrganization"
      type:
        $ref: '#/definitions/OrganizationType'
      products:
        type: array
        items:
          $ref: '#/definitions/CodacyProduct'

  RemovePeopleBody:
    type: object
    required:
      - emails
    properties:
      emails:
        type: array
        items:
          type: string
        description: "List of emails to add"

  SearchRepositoryIssuesBody:
    type: object
    description: Search parameters to filter the list of issues in a repository
    properties:
      branchName:
        type: string
        description: |
          Name of a [repository branch enabled on Codacy](https://docs.codacy.com/repositories-configure/managing-branches/),
          as returned by the endpoint [listRepositoryBranches](#listrepositorybranches).
          By default, uses the main branch defined on the Codacy repository settings.
        example: a-feature-branch-name
      patternIds:
        type: array
        description: Set of code pattern identifiers, as returned by the endpoint [listPatterns](#listpatterns)
        items:
          type: string
        example: [ ESLint_@typescript-eslint_consistent-indexed-object-style, ESLint_@typescript-eslint_no-redeclare ]
      languages:
        type: array
        description: Set of language names, without spaces
        items:
          type: string
        example: [ Java, Scala, CSS, ObjectiveC ]
      categories:
        type: array
        description: Set of issue categories
        items:
          type: string
        example: [ Security, CodeStyle ]
      levels:
        type: array
        description: Set of issue severity levels
        items:
          $ref: "#/definitions/SeverityLevel"
        example: [ Error, Warning ]
      authorEmails:
        type: array
        description: Set of commit author email addresses
        items:
          type: string
        example: [ example@mail.com, another@mail.com ]

  RemovePeopleEmailStatus:
    type: object
    required:
      - email
    properties:
      email:
        type: string
      error:
        type: string

  RemovePeopleResponse:
    type: object
    properties:
      success:
        type: array
        items:
          $ref: "#/definitions/RemovePeopleEmailStatus"
      failed:
        type: array
        items:
          $ref: "#/definitions/RemovePeopleEmailStatus"

  SuggestedAuthorsResponse:
    type: object
    required:
      - data
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/SuggestedAuthor"

  RepositorySuggestedAuthorsResponse:
    type: object
    required:
      - data
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/RepositorySuggestedAuthor"

  SuggestedAuthor:
    type: object
    required:
      - commitEmail
      - projectCommitStats
      - totalProjects
      - totalCommits
    properties:
      commitEmail:
        type: string
      totalProjects:
        type: integer
        format: int64
      totalCommits:
        type: integer
        format: int64
      lastCommit:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
      projectCommitStats:
        type: array
        items:
          $ref: "#/definitions/ProjectCommitStat"

  RepositorySuggestedAuthor:
    type: object
    required:
      - commitEmail
      - projectCommitStat
    properties:
      commitEmail:
        type: string
      projectCommitStat:
        $ref: "#/definitions/ProjectCommitStat"

  ProjectCommitStat:
    type: object
    required:
      - projectId
      - numberOfCommits
    properties:
      projectId:
        type: integer
        format: int64
      firstCommit:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
      lastCommit:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
      numberOfCommits:
        type: integer
        format: int64

  AnalysisTool:
    type: object
    required:
      - name
      - settings
      - isClientSide
    properties:
      name:
        type: string
      isClientSide:
        type: boolean
      settings:
        $ref: "#/definitions/AnalysisToolSettings"

  AnalysisToolSettings:
    type: object
    required:
      - isEnabled
      - usesConfigurationFile
    properties:
      name:
        type: string
      isEnabled:
        type: boolean
      usesConfigurationFile:
        type: boolean

  CoverageReport:
    type: object
    description: "Status and details of a coverage report"
    required:
      - createdAt
      - status
      - targetCommitSha
    properties:
      targetCommitSha:
        type: string
        description: "Commit SHA that was referenced as the target for this report"
      commit:
        $ref: "#/definitions/CommitWithBranches"
      language:
        type: string
        description: "Programming language associated with the coverage report"
      createdAt:
        type: string
        description: Report creation date
        format: date-time
        x-scala-type: java.time.Instant
      status:
        type: string
        description: Coverage status
        enum:
          - Pending
          - Processed
          - CommitNotAnalysed
          - CommitNotFound
          - BranchNotEnabled
          - MissingFinal

  CoverageReportResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: object
        properties:
          hasCoverageOverview:
            type: boolean
            description: True if the Quality evolution chart of the repository includes coverage information
          lastReports:
            type: array
            items:
              $ref: "#/definitions/CoverageReport"

  PullRequestCoverageReport:
    type: object
    description: Status and details of a pull request coverage report
    required:
      - createdAt
      - status
      - targetCommitSha
    properties:
      targetCommitSha:
        type: string
        description: "Commit SHA that was referenced as the target for this report"
      commit:
        $ref: "#/definitions/CommitWithBranches"
      language:
        type: string
        description: "Programming language associated with the coverage report"
      createdAt:
        type: string
        description: Report creation date
        format: date-time
        x-scala-type: java.time.Instant
      status:
        type: string
        description: Coverage status
        enum:
          - Pending
          - Processed
          - CommitNotAnalysed
          - CommitNotFound
          - BranchNotEnabled
          - MissingFinal

  CoveragePullRequestCommitDetail:
    type: object
    description: Status and details of the coverage reports received for a pull request commit
    required:
      - commitId
      - reports
      - commitSha
    properties:
      commitId:
        type: integer
        format: int64
        example: 1
      commitSha:
        type: string
      reports:
        type: array
        items:
          $ref: "#/definitions/PullRequestCoverageReport"

  CoveragePullRequestResponse:
    type: object
    description: |
      Status and details about the coverage reports uploaded for the head commit
      and common ancestor commit of the pull request.
    required:
      - data
    properties:
      data:
        type: object
        required:
          - headCommit
          - commonAncestorCommit
          - origin
          - target
        properties:
          headCommit:
            $ref: "#/definitions/CoveragePullRequestCommitDetail"
          commonAncestorCommit:
            $ref: "#/definitions/CoveragePullRequestCommitDetail"
          origin:
            description: Deprecated, use `headCommit` instead
            $ref: "#/definitions/CoveragePullRequestCommitDetail"
          target:
            description: Deprecated, use `commonAncestorCommit` instead
            $ref: "#/definitions/CoveragePullRequestCommitDetail"

  PullRequestIssuesResponse:
    type: object
    description: List of issues added or fixed on a pull request
    required:
      - analyzed
      - data
    properties:
      analyzed:
        description: True if Codacy already analyzed the latest commit
        type: boolean
      data:
        description: List of issues added or fixed on a pull request or an empty list if Codacy didn't analyze the latest commit yet.
        type: array
        items:
          $ref: '#/definitions/CommitDeltaIssue'
      pagination:
        $ref: '#/definitions/PaginationInfo'

  AnalysisStepExecutionMetrics:
    type: object
    description: Execution metrics for a step of the analysis process
    required:
      - title
      - start
      - end
      - activeExecutionTime
      - totalExecutionTime
      - status
    properties:
      title:
        type: string
      start:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
      end:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
      activeExecutionTime:
        type: integer
        format: int64
      totalExecutionTime:
        type: integer
        format: int64
      stackTrace:
        type: string
      status:
        type: string
        enum:
          - success
          - error

  LogsResponse:
    type: object
    description: Analysis logs response for a commit or pull request
    required:
      - data
    properties:
      data:
        type: object
        description: Analysis logs data for a commit or pull request
        required:
          - headCommitSha
          - start
          - end
          - totalAnalysisTime
          - steps
        properties:
          headCommitSha:
            type: integer
            format: int64
          commonAncestorCommitSha:
            type: integer
            format: int64
          start:
            type: string
            format: date-time
            x-scala-type: java.time.Instant
          end:
            type: string
            format: date-time
            x-scala-type: java.time.Instant
          totalAnalysisTime:
            type: integer
            format: int64
          steps:
            type: array
            items:
              $ref: '#/definitions/AnalysisStepExecutionMetrics'

  ClonesResponse:
    type: object
    description: List of duplicate code blocks added or removed in a commit or pull request
    required:
      - data
    properties:
      data:
        description: List of duplicate code blocks added or removed in a commit or pull request, or an empty list if Codacy hasn't analyzed the latest commit yet.
        type: array
        items:
          $ref: '#/definitions/CommitFileClone'
      pagination:
        $ref: '#/definitions/PaginationInfo'

  CommitFileClone:
    type: object
    description: A duplicated code block with references to duplicate instances
    required:
      - id
      - status
      - clones
    properties:
      id:
        type: integer
        format: int64
      status:
        $ref: '#/definitions/DeltaType'
      clones:
        type: array
        items:
          $ref: '#/definitions/CloneDuplicationBlock'

  CloneDuplicationBlock:
    type: object
    required:
      - path
      - fileId
      - fileDataId
      - fromLine
      - toLine
    properties:
      path:
        type: string
      fileId:
        type: integer
        format: int64
      fileDataId:
        type: integer
        format: int64
      fromLine:
        type: integer
        format: int64
      toLine:
        type: integer
        format: int64

  DiffResponse:
    type: object
    description: |
      Human-readable Git diff of a commit or pull request
    required:
      - diff
    properties:
      diff:
        type: string

  SecurityDashboardMetrics:
    type: object
    required:
      - 12_month
      - 30_day_variation
    properties:
      12_month:
        type: integer
        format: int32
      30_day_variation:
        type: object
        required:
          - absolute
          - percentage
        properties:
          absolute:
            type: integer
            format: int32
          percentage:
            type: number
            multipleOf: 0.01
            format: double

  SecurityDashboardResponse:
    type: object
    description: |
      Brief security metrics for a security dashboard.
    required:
      - items_overdue
      - items_due_soon
      - past_sla_misses
      - past_sla_on_time
    properties:
      items_overdue:
        $ref: "#/definitions/SecurityDashboardMetrics"
      items_due_soon:
        $ref: "#/definitions/SecurityDashboardMetrics"
      past_sla_misses:
        $ref: "#/definitions/SecurityDashboardMetrics"
      past_sla_on_time:
        $ref: "#/definitions/SecurityDashboardMetrics"

  SRMDashboard:
    type: object
    description: Metrics for the security and risk management dashboard.
    required:
      - totalOpen
      - totalClosed
      - onTrack
      - dueSoon
      - overdue
      - closedOnTime
      - closedLate
    properties:
      totalOpen:
        type: integer
        format: int32
      totalClosed:
        type: integer
        format: int32
      onTrack:
        type: integer
        format: int32
      dueSoon:
        type: integer
        format: int32
      overdue:
        type: integer
        format: int32
      closedOnTime:
        type: integer
        format: int32
      closedLate:
        type: integer
        format: int32

  SRMDashboardResponse:
    type: object
    description: Metrics for the security and risk management dashboard.
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/SRMDashboard'

  SecurityComponent:
    type: object
    description: |
      Two part metric, the purpose of which is described by the property it's used in.
    required:
      - total
      - ok
    properties:
      total:
        type: integer
        format: int32
      ok:
        type: integer
        format: int32

  SecurityComponentsResponse:
    type: object
    description: |
      Aggregate of various metrics.
    required:
      - items
    properties:
      items:
        type: array
        items:
          type: object
          required:
            - repositories
            - infrastructure
            - people
            - tickets
          properties:
            repositories:
              $ref: "#/definitions/SecurityComponent"
            infrastructure:
              $ref: "#/definitions/SecurityComponent"
            people:
              $ref: "#/definitions/SecurityComponent"
            tickets:
              $ref: "#/definitions/SecurityComponent"

  # This is the "interface" for all error responses
  # It should not be used as an error response by itself

  # We were using an error defined at this level but the mechanism for
  # using the discriminator field is not currently working and it was
  # causing the error field to not be sent (moved it to a default value
  # in each error)
  ApiError:
    type: object
    required:
      - message
      - actions
    properties:
      message:
        type: string
      innerMessage:
        type: string
      actions:
        type: array
        items:
          $ref: "#/definitions/ProblemLink"

  BadRequest: #400
    allOf:
      - $ref: "#/definitions/ApiError"
      - type: object
        required:
          - error
        properties:
          error:
            type: string
            default: "BadRequest"

  Unauthorized: #401
    allOf:
      - $ref: "#/definitions/ApiError"
      - type: object
        required:
          - error
        properties:
          error:
            type: string
            default: "Unauthorized"

  PaymentRequired: #402
    allOf:
      - $ref: "#/definitions/ApiError"
      - type: object
        required:
          - error
        properties:
          error:
            type: string
            default: "PaymentRequired"

  Forbidden: #403
    allOf:
      - $ref: "#/definitions/ApiError"
      - type: object
        required:
          - error
        properties:
          error:
            type: string
            default: "Forbidden"

  NotFound: #404
    allOf:
      - $ref: "#/definitions/ApiError"
      - type: object
        required:
          - error
        properties:
          error:
            type: string
            default: "NotFound"

  MethodNotAllowed: #405
    allOf:
      - $ref: "#/definitions/ApiError"
      - type: object
        required:
          - error
        properties:
          error:
            type: string
            default: "MethodNotAllowed"

  Conflict: #409
    allOf:
      - $ref: "#/definitions/ApiError"
      - type: object
        required:
          - error
        properties:
          error:
            type: string
            default: "Conflict"

  UnprocessableEntity: #422
    allOf:
      - $ref: "#/definitions/ApiError"
      - type: object
        required:
          - error
        properties:
          error:
            type: string
            default: "UnprocessableEntity"

  InternalServerError: #500
    allOf:
      - $ref: "#/definitions/ApiError"
      - type: object
        required:
          - error
        properties:
          error:
            type: string
            default: "InternalServerError"

  NotImplemented: #501
    allOf:
      - $ref: "#/definitions/ApiError"
      - type: object
        required:
          - error
        properties:
          error:
            type: string
            default: "NotImplemented"

  BadGateway: #502
    allOf:
      - $ref: "#/definitions/ApiError"
      - type: object
        required:
          - error
        properties:
          error:
            type: string
            default: "BadGateway"

  Tool:
    description: Codacy tool that can flag patterns/issues on projects
    allOf:
      - $ref: "#/definitions/ToolReference"
      - type: object
        required:
          - version
          - shortName
          - needsCompilation
          - configurationFilenames
          - dockerImage
          - languages
          - clientSide
          - standalone
          - enabledByDefault
          - configurable
        properties:
          version:
            type: string
            description: Original tool version used by the Codacy tool wrapper
            example: 6.8.0
          shortName:
            type: string
            description: Tool unique short name, must contain alphanumeric characters only and no spaces
            example: eslint
          documentationUrl:
            type: string
            description: Original tool documentation URL
            example: http://eslint.org/docs/rules/
          sourceCodeUrl:
            type: string
            description: Codacy tool wrapper source code URL
            example: https://github.com/codacy/codacy-eslint
          prefix:
            type: string
            description: Tool prefix used to ensure pattern names are unique
            example: "ESLint_"
          needsCompilation:
            type: boolean
            description: Tool requires compilation to run
            example: false
          configurationFilenames:
            type: array
            description: Tool configuration filename
            items:
              type: string
            example: [ ".eslintrc.js", ".eslintrc.yaml" ]
          description:
            type: string
            description: Tool description
            example: ESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions
          dockerImage:
            type: string
            description: Docker image used to launch tool
            example: codacy/codacy-eslint:2.20.19
          languages:
            type: array
            description: List of languages that the tool supports
            items:
              type: string
            example: [ "JavaScript" ]
          clientSide:
            type: boolean
            description: True if the tool is supposed to run on the client's machine and the results sent to Codacy
            example: true
          standalone:
            type: boolean
            description: True if the client-side tool runs stand-alone outside of the CLI
            example: true
          enabledByDefault:
            type: boolean
            description: True if the tool is enabled by default for new projects (not required)
            example: true
          configurable:
            type: boolean
            description: True if the tool is configurable on Codacy's UI
            example: true

  ToolListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Tool'
      pagination:
        $ref: '#/definitions/PaginationInfo'

  DuplicationTool:
    description: Codacy tool that can detect duplication on projects
    type: object
    required:
      - dockerImage
      - languages
    properties:
      dockerImage:
        type: string
        description: Docker image used to launch tool
        example: codacy/codacy-duplication-pmdcpd:1.0.0
      languages:
        type: array
        description: List of languages that the tool supports
        items:
          type: string

  DuplicationToolListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/DuplicationTool'

  MetricsTool:
    description: Codacy tool that calculates metrics on projects
    type: object
    required:
      - dockerImage
      - languages
    properties:
      dockerImage:
        type: string
        description: Docker image used to launch tool
        example: codacy/codacy-metrics-cloc:1.0.0
      languages:
        type: array
        description: List of languages that the tool supports
        items:
          type: string

  MetricsToolListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/MetricsTool'

  AnalysisToolsResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/AnalysisTool"

  Pattern:
    description: Code pattern that a Codacy tool can use to find issues
    allOf:
      - $ref: '#/definitions/PatternDetails'
      - type: object
        required:
          - enabled
          - parameters
        properties:
          description:
            type: string
            description: Short description of the code pattern
            example: Enforce getter and setter pairs in objects and classes
          explanation:
            type: string
            description: Full description of the code pattern, in CommonMark
            example: Accessor pairs description
          enabled:
            type: boolean
            description: True if the code pattern is on by default for new repositories
            example: true
          languages:
            type: array
            description: List of languages that the code pattern supports
            items:
              type: string
            example: [ "JavaScript" ]
          timeToFix:
            type: integer
            format: int32
            description: Average time to fix an issue detected by the code pattern, in minutes
            example: 5
          parameters:
            $ref: '#/definitions/ParameterList'

  PatternListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Pattern'
      pagination:
        $ref: '#/definitions/PaginationInfo'

  PatternResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/Pattern'

  Parameter:
    type: object
    description: Parameter to configure a code pattern
    required:
      - name
      - default
    properties:
      name:
        type: string
        description: Name of the parameter
        example: getWithoutSet
      description:
        type: string
        description: Description of the parameter
        example: getWithoutSet
      default:
        type: string
        description: Default value of the parameter
        example: "true"

  ParameterList:
    type: array
    items:
      $ref: '#/definitions/Parameter'

  Person:
    type: object
    description: Representation of a person that belongs to an organization
    required:
      - email
      - emails
      - isActive
      - canBeRemoved
    properties:
      name:
        type: string
        description: The name of the person
        example: John Smith
      email:
        type: string
        description: "[deprecated: use emails instead] The email of the person"
        example: johnsmith@emailprovider.com
      emails:
        type: array
        description: The emails of the person
        items:
          type: string
        example: [ johnsmith@emailprovider.com ]
      userId:
        description: User ID internal to Codacy.
        type: integer
        format: int64
        example: 1234
      commiterId:
        description: Commit author ID
        type: integer
        format: int64
        example: 1234
      lastLogin:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2020-11-05T15:39:13.430Z"
      lastAnalysis:
        type: string
        description: "Date and time when Codacy last analyzed a commit from this person."
        format: date-time
        x-scala-type: java.time.Instant
        example: "2020-11-05T15:39:13.430Z"
      isActive:
        type: boolean
        description: Whether the person is active on Codacy or not
      canBeRemoved:
        type: boolean
        description: Whether the person can be removed from the organization or not
      lastCommitId:
        type: integer
        format: int64
        example: 2335557754

  ListPeopleResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/Person'
      pagination:
        $ref: '#/definitions/PaginationInfo'

  LeaveOrgProblem:
    type: object
    required:
      - actions
      - code
    properties:
      actions:
        type: array
        items:
          $ref: "#/definitions/ProblemLink"
      code:
        type: string
        description: "A stable identifier for a problem."
        example: "last_admin_credit"

  LeaveOrgCheckResult:
    type: object
    description: Informs if the user can leave the organization and if not, why.
    required:
      - canLeave
      - message
    properties:
      canLeave:
        type: boolean
        description: True if user can leave the organization
        example: true
      message:
        type: string
        example: "Since you are the last organization admin of $orgName, to leave this organization you need to delete it. Please, contact us through support."
      reason:
        $ref: '#/definitions/LeaveOrgProblem'

  FileCoverageAnalysis:
    type: object
    description: Coverage analysis metrics for a file
    required:
      - coverage
      - coverableLines
      - coveredLines
    properties:
      coverage:
        type: number
        multipleOf: 0.01
        format: double
        description: Coverage percentage of the file with decimals
        example: 71.00
      coverableLines:
        type: integer
        format: int64
        description: Coverable lines of the file (lines that can be covered by tests)
        example: 2
      coveredLines:
        type: integer
        format: int64
        description: Covered lines of the file (lines that are covered by tests)
        example: 1

  FileMetadata:
    type: object
    description: Metadata for a file in a repository
    required:
      - commitId
      - commitSha
      - fileId
      - fileDataId
      - path
      - language
      - gitProviderUrl
    properties:
      commitId:
        type: integer
        format: int64
        example: 1
      commitSha:
        type: string
        description: Commit SHA
      fileId:
        type: integer
        format: int64
        description: Identifier for file in any branch of a specific commit
        example: 1
      fileDataId:
        type: integer
        format: int64
        description: Identifier for file
        example: 1
      path:
        type: string
        description: Relative path of the file in the repository
        example: /src/test.go
      language:
        description: Language of the file
        type: string
        example: Go
      gitProviderUrl:
        type: string
        description: URL to the commit on the Git provider
        example: "https://github.com/codacy/tools-for-code-review-engineers/commit/370b160aaf0ed781d707d335aa1fde20cefeabf2"

  FileMetrics:
    type: object
    description: Metadata for a file
    properties:
      linesOfCode:
        type: integer
        format: int32
        description: Lines of code in the file
        example: 123
      commentedLinesOfCode:
        type: integer
        format: int64
        description: Commented lines of code in the file
        example: 123
      numberOfMethods:
        type: integer
        format: int32
        description: Number of methods in the file
        example: 123
      numberOfClasses:
        type: integer
        format: int32
        description: Number of classes in the file
        example: 123

  FileInformationWithAnalysis:
    type: object
    required:
      - file
    properties:
      file:
        $ref: '#/definitions/FileMetadata'
      metrics:
        $ref: '#/definitions/FileMetrics'
      coverage:
        $ref: '#/definitions/FileCoverageAnalysis'

  FileWithAnalysisInfo:
    type: object
    description: File with analysis information
    required:
      - fileId
      - branchId
      - path
      - totalIssues
      - grade
      - gradeLetter
      - numberOfMethods
    properties:
      fileId:
        type: integer
        format: int64
        description: Identifier of the file in a specific branch and commit
        example: 2
      branchId:
        type: integer
        format: int64
        description: Identifier for the branch the file belongs to
        example: 3
      path:
        type: string
        description: Relative path of the file in the repository
        example: /src/test.go
      totalIssues:
        type: integer
        format: int32
        description: Number of issues in the file
        example: 42
      complexity:
        type: integer
        format: int32
        description: Complexity level of the file
        example: 3
      grade:
        type: integer
        format: int32
        description: Quality grade of the file as a number between 100 (highest grade) and 0 (lowest grade)
        example: 74
      gradeLetter:
        type: string
        description: Quality grade of the file as a letter between A (highest grade) and F (lowest grade)
        example: A
      coverage:
        type: integer
        format: int32
        description: Deprecated, use `coverageWithDecimals` instead
        example: 71
      coverageWithDecimals:
        type: number
        multipleOf: 0.01
        format: double
        description: Test coverage percentage of the file with decimals
        example: 71.00
      duplication:
        type: integer
        format: int32
        description: Number of duplicated lines in the file
        example: 7
      linesOfCode:
        type: integer
        format: int32
        description: Lines of code in the file
        example: 123
      sourceLinesOfCode:
        type: integer
        format: int32
        description: Coverable lines of code in the file
        example: 90
      numberOfMethods:
        type: integer
        format: int32
        description: Number of methods in the file
        example: 12
      numberOfClones:
        type: integer
        format: int32
        description: Number of cloned blocks of code in the file
        example: 5

  FileListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/FileWithAnalysisInfo'
      pagination:
        $ref: '#/definitions/PaginationInfo'

  FileCoverage:
    type: object
    description: Coverage information for a file
    required:
      - line
      - hits
    properties:
      line:
        type: integer
        format: int32
        description: Line number
        example: 2
      hits:
        type: integer
        format: int32
        description: Number of test hits for the line
        example: 3

  GetFileCoverageResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/FileCoverage'

  CopyPatternsBody:
    type: object
    required:
      - targetRepositories
    properties:
      targetRepositories:
        type: array
        items:
          type: string

  CopyPatternsResponse:
    type: object
    properties:
      success:
        type: array
        items:
          $ref: "#/definitions/CopyPatternsStatus"
      failed:
        type: array
        items:
          $ref: "#/definitions/CopyPatternsStatus"

  CopyPatternsStatus:
    type: object
    required:
      - repositoryName
    properties:
      repositoryName:
        type: string
      error:
        type: string

  Language:
    type: object
    description: Language information
    required:
      - name
    properties:
      name:
        type: string
        description: name of the language
        example: Scala

  LanguageListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/Language"

  CreateCodingStandardBody:
    type: object
    description: Details of a new coding standard
    required:
      - name
      - languages
    properties:
      name:
        type: string
        description: Name of the new coding standard
        example: Coding style conventions
      languages:
        type: array
        items:
          type: string
        description: List of programming languages supported by the new coding standard
        example:
          - Java
          - Go

  SetDefaultCodingStandardBody:
    type: object
    description: Toggle the default coding standard for an organization
    required:
      - isDefault
    properties:
      isDefault:
        type: boolean
        description: True if the coding standard is the default for the organization

  ProviderIntegrationSettingsBody:
    type: object
    description: Default settings for Git provider integrations
    required:
      - commitStatus
      - pullRequestComment
      - pullRequestSummary
      - aiEnhancedComments
    properties:
      commitStatus:
        type: boolean
        description: Toggle the feature "Status checks"
      pullRequestComment:
        type: boolean
        description: Toggle the feature "Issue annotations"
      pullRequestSummary:
        type: boolean
        description: Toggle the feature "Issue summaries"
      coverageSummary:
        type: boolean
        description: Toggle the feature "Coverage summary" (GitHub only)
      suggestions:
        type: boolean
        description: Toggle the feature "Suggested fixes" (GitHub only)
      aiEnhancedComments:
        type: boolean
        description: Toggle the feature "AI-enhanced comments". If "Suggested fixes" (GitHub only) is also enabled, then the AI-enhanced comments also provide suggested fixes. This is an experimental feature.


  ProviderIntegrationSettingsPatchBody:
    type: object
    description: Default settings for Git provider integrations
    properties:
      commitStatus:
        type: boolean
        description: Toggle the feature "Status checks"
      pullRequestComment:
        type: boolean
        description: Toggle the feature "Issue annotations"
      pullRequestSummary:
        type: boolean
        description: Toggle the feature "Issue summaries"
      coverageSummary:
        type: boolean
        description: Toggle the feature "Coverage summary" (GitHub only)
      suggestions:
        type: boolean
        description: Toggle the feature "Suggested fixes" (GitHub only)
      aiEnhancedComments:
        type: boolean
        description: Toggle the feature "AI-enhanced comments". If "Suggested fixes" (GitHub only) is also enabled, then the AI-enhanced comments also provide suggested fixes.

  ApplyCodingStandardToRepositoriesBody:
    type: object
    description: Names of the repositories to link or unlink from a coding standard
    required:
      - link
      - unlink
    properties:
      link:
        type: array
        description: Names of the repositories to link to a coding standard
        items:
          type: string
      unlink:
        type: array
        description: Names of the repositories to unlink from a coding standard
        items:
          type: string

  ApplyGatePolicyToRepositoriesBody:
    type: object
    description: Names of the repositories to link or unlink from a gate policy
    required:
      - link
      - unlink
    properties:
      link:
        type: array
        description: Names of the repositories to link to a gate policy
        items:
          type: string
      unlink:
        type: array
        description: Names of the repositories to unlink from a gate policy
        items:
          type: string

  UpdateCodingStandardPatternsBody:
    type: object
    description: Specifies the update to apply to the code patterns of a tool in a coding standard
    required:
      - enabled
    properties:
      enabled:
        type: boolean
        description: True enables the code patterns, and False disables them.

  CodingStandardMeta:
    type: object
    description: Meta information about a coding standard
    required:
      - enabledToolsCount
      - enabledPatternsCount
      - linkedRepositoriesCount
    properties:
      enabledToolsCount:
        type: integer
        format: int32
        description: Number of tools that are enabled in the coding standard
      enabledPatternsCount:
        type: integer
        format: int32
        description: Number of code patterns that are enabled in the coding standard
      linkedRepositoriesCount:
        type: integer
        format: int32
        description: Number of repositories using the coding standard

  CodingStandard:
    type: object
    description: Coding standard for an organization
    required:
      - id
      - name
      - isDraft
      - isDefault
      - languages
      - meta
    properties:
      id:
        type: integer
        format: int64
        description: Identifier of the coding standard
      name:
        type: string
        description: Name of the coding standard
      isDraft:
        type: boolean
        description: True if the coding standard is a draft
      isDefault:
        type: boolean
        description: True if the coding standard is the default for the organization
      languages:
        type: array
        description: List of programming languages supported by the coding standard
        items:
          type: string
      meta:
        $ref: '#/definitions/CodingStandardMeta'

  CodingStandardTool:
    type: object
    description: Information about a tool in a coding standard
    required:
      - codingStandardId
      - uuid
      - isEnabled
    properties:
      codingStandardId:
        type: integer
        format: int64
        description: Coding standard identifier
      uuid:
        type: string
        description: Unique identifier of the tool
        example: 847feb32-9ff2-11ea-bb37-0242ac130002
      isEnabled:
        type: boolean
        description: True if the tool is enabled in the coding standard
        example: true

  CodingStandardResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/CodingStandard'

  CodingStandardsListResponse:
    type: object
    description: List of coding standards for an organization
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/CodingStandard'

  CodingStandardToolsListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/CodingStandardTool'

  CodingStandardPatternsListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/CodingStandardPattern'
      pagination:
        $ref: '#/definitions/PaginationInfo'
      meta:
        $ref: '#/definitions/StandardPatternListMeta'

  ApplyCodingStandardToRepositoriesResult:
    type: object
    description: Result of applying a coding standard to a list of repositories
    required:
      - successful
      - failed
    properties:
      successful:
        type: array
        description: Names of the repositories that were successfully linked or unlinked from a coding standard
        items:
          type: string
      failed:
        type: array
        description: Names of the repositories that failed to be linked or unlinked from a coding standard
        items:
          type: string

  GatePoliciesListResponse:
    type: object
    description: List of gate policies for an organization
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/GatePolicySummarized'

  GatePolicySummarized:
    type: object
    description: Gate policy summary information, without the quality gate settings
    required:
      - id
      - name
      - isDefault
      - readOnly
      - meta
    properties:
      id:
        type: integer
        format: int64
        example: 1
        description: Identifier of the gate policy
      name:
        type: string
        example: policy-name
        description: Name of the gate policy
      isDefault:
        type: boolean
        example: true
        description: True if the gate policy is the default for the organization
      readOnly:
        type: boolean
        example: true
        description: True if the quality gates of the gate policy cannot be changed
      meta:
        $ref: '#/definitions/GatePolicyMeta'

  GetGatePolicyResultResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/GatePolicy'

  ListRepositoriesFollowingGatePolicyResultResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        description: List of repositories following a gate policy
        items:
          $ref: '#/definitions/RepositoryIdentification'
      pagination:
        $ref: '#/definitions/PaginationInfo'

  GatePolicy:
    type: object
    description: Details of the gate policy
    required:
      - id
      - name
      - isDefault
      - readOnly
      - settings
      - meta
    properties:
      id:
        type: integer
        format: int64
        example: 1
        description: Identifier of the gate policy
      name:
        type: string
        example: policy-name
        description: Name of the gate policy
      isDefault:
        type: boolean
        example: true
        description: True if the gate policy is the default for the organization
      readOnly:
        type: boolean
        example: true
        description: True if the quality gates of the gate policy cannot be changed
      settings:
        $ref: '#/definitions/QualityGate'
      meta:
        $ref: '#/definitions/GatePolicyMeta'

  CreateGatePolicyBody:
    type: object
    description: Details of a new gate policy
    required:
      - gatePolicyName
    properties:
      gatePolicyName:
        type: string
        description: Name of the gate policy
        example: gate-policy-name
      isDefault:
        type: boolean
        example: true
      settings:
        $ref: '#/definitions/QualityGate'

  GatePolicyMeta:
    type: object
    description: Meta information about a gate policy
    required:
      - nrOfQualityGates
      - linkedRepositoriesCount
    properties:
      nrOfQualityGates:
        type: integer
        format: int32
        example: 10
        description: Number of quality gates that are configured in the gate policy
      linkedRepositoriesCount:
        type: integer
        format: int32
        example: 10
        description: Number of repositories following the gate policy


  ApplyCodingStandardToRepositoriesResultResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/ApplyCodingStandardToRepositoriesResult'

  CodingStandardPattern:
    type: object
    description: Code pattern configuration for a tool in a coding standard
    required:
      - patternDefinition
      - enabled
      - parameters
    properties:
      patternDefinition:
        $ref: '#/definitions/Pattern'
      enabled:
        type: boolean
        description: True if the code pattern is enabled in the coding standard
        example: true
      parameters:
        $ref: '#/definitions/CodingStandardParametersList'

  StandardPatternListMeta:
    type: object
    description: Metadata for a retrieved coding standard's pattern list
    required:
      - totalEnabled
    properties:
      totalEnabled:
        type: integer
        format: int32
        description: Total number of enabled patterns
        default: 0
        example: 35

  CodingStandardParametersList:
    type: array
    items:
      $ref: '#/definitions/CodingStandardParameter'

  RepositoryIdentification:
    description: Identifier and name of a repository using a coding standard
    type: object
    required:
      - repositoryId
      - name
    properties:
      repositoryId:
        type: integer
        format: int64
        description: Identifier of the repository
      name:
        type: string
        description: Name of the repository
        example: codacy-eslint

  CodingStandardRepositoriesListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        description: List of repositories using a coding standard
        items:
          $ref: '#/definitions/RepositoryIdentification'
      pagination:
        $ref: '#/definitions/PaginationInfo'

  CodingStandardParameter:
    type: object
    description: Parameter to configure a code pattern for a tool in a coding standard
    required:
      - name
      - value
    properties:
      name:
        type: string
        description: Code pattern parameter name
        example: getWithoutSet
      value:
        type: string
        description: Code pattern parameter value
        example: "true"

  ToolConfiguration:
    type: object
    description: Configuration of a tool and its code patterns
    required:
      - patterns
    properties:
      enabled:
        type: boolean
        description: True if the tool is enabled in the repository or coding standard
        example: true
      patterns:
        type: array
        description: List of code pattern configurations
        items:
          $ref: '#/definitions/PatternConfiguration'

  PatternConfiguration:
    type: object
    description: Code pattern configuration
    required:
      - id
    properties:
      id:
        type: string
        description: Code pattern unique identifier
        example: ESLint_@typescript-eslint_no-shadow
      enabled:
        type: boolean
        description: True if the code pattern is enabled in the repository or coding standard
        example: true
      parameters:
        type: array
        description: List of code pattern parameter configurations
        items:
          $ref: '#/definitions/CodingStandardParameter'

  SearchOrganizationRepositoriesWithAnalysis:
    type: object
    description: Search organization repositories with analysis query body
    properties:
      names:
        type: array
        description: List of repository names
        items:
          type: string

  FileExtensionsResponse:
    type: object
    required:
      - languagesExtensions
    properties:
      languagesExtensions:
        type: array
        description: List of languages with supported extensions
        items:
          $ref: '#/definitions/FileExtensions'

  FileExtensions:
    type: object
    description: List of supported file extensions for a specific language
    required:
      - name
      - codacyDefaults
      - extensions
    properties:
      name:
        type: string
        description: Language name
      codacyDefaults:
        type: array
        description: Default Codacy extensions for the language
        items:
          type: string
      extensions:
        type: array
        description: List of custom extensions for the language
        items:
          type: string

  FileExtensionsUpdate:
    type: object
    required:
      - name
      - extensions
    properties:
      name:
        type: string
        description: Language name
      extensions:
        type: array
        description: List of custom file extensions for the language
        items:
          type: string

  FileExtensionsBody:
    type: object
    required:
      - languagesExtensions
    properties:
      languagesExtensions:
        type: array
        description: List of custom file extensions to associate with each language for a repository
        items:
          $ref: '#/definitions/FileExtensionsUpdate'

  IssueStateBody:
    type: object
    description: Ignored status of an issue
    required:
      - ignored
    properties:
      ignored:
        type: boolean
        description: True if the issue is ignored

  CodeBlockLine:
    type: object
    required:
      - number
      - content
    properties:
      number:
        type: integer
        description: Line number
      content:
        type: string
        description: Line content

  CodeBlockLineListResponse:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/CodeBlockLine"

  FileStateBody:
    type: object
    description: Ignored status of a file
    required:
      - filepath
      - ignored
    properties:
      ignored:
        type: boolean
        description: True if the file is ignored
        example: true
      filepath:
        type: string
        description: Relative path of the file in the repository
        example: "src/main/scala/main/Main.scala"

  SrmStatus:
    type: string
    example: "Overdue"
    enum: &SrmStatusEnum
      - "Overdue"
      - "OnTrack"
      - "DueSoon"
      - "ClosedOnTime"
      - "ClosedLate"

  SrmPriority:
    type: string
    example: "Critical"
    enum: &SrmPriorityEnum
      - "Low"
      - "Medium"
      - "High"
      - "Critical"

  SrmSource:
    type: string
    example: "Codacy"
    enum: &SrmSourceEnum
      - "Codacy"
      - "Jira"

  SrmItemsResponse:
    type: object
    description: Security and risk management item list, sorted by due date descending.
    required:
      - pagination
      - data
    properties:
      pagination:
        $ref: '#/definitions/PaginationInfo'
      data:
        type: array
        items:
          $ref: '#/definitions/SrmItem'

  SrmItem:
    type: object
    description: Security and risk management item of an organization.
    required:
      - id
      - itemSource
      - itemSourceId
      - title
      - priority
      - status
      - openedAt
      - dueAt
    properties:
      id:
        description: Item ID internal to Codacy.
        type: string
        format: uuid
        example: "ba7c836d-85f8-4617-9a95-ac6f00af1d30"
      itemSource:
        type: string
        enum: *SrmSourceEnum
        description: Source platform of the item's underlying issue
        example: "Codacy"
      itemSourceId:
        type: string
        example: "764334"
        description: Original source item ID.
      title:
        type: string
        description: Human-readable title of the item.
        example: "Codacy quality - critical security issue 764334"
      repository:
        type: string
        example: "codacy-docs"
      openedAt:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2017-07-21T17:32:28Z"
      closedAt:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2017-08-21T17:32:28Z"
      dueAt:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2017-07-21T17:32:28Z"
      priority:
        type: string
        example: "Critical"
        enum: *SrmPriorityEnum
      status:
        type: string
        example: "Overdue"
        enum: *SrmStatusEnum
      htmlUrl:
        type: string
        example: "https://app.codacy.com/gh/test-org/test-repo/issues?resultDataId=12345"
        description: Link to the item's underlying issue
      projectKey:
        type: string
        example: "PUL"
        description: Jira project key of the item's underlying issue
      securityCategory:
        type: string
        example: Cryptography
        description: The category of a security item identified by Codacy

  SrmPriorityMapping:
    type: object
    description: Security and risk management priority mapping
    required:
      - priority
      - criteria
    properties:
      priority:
        type: string
        example: "Critical"
        enum: *SrmPriorityEnum
      criteria:
        type: object
        required:
          - category
          - severity
        properties:
          category:
            type: string
            description: Issue category
            example: "Security"
          severity:
            $ref: "#/definitions/SeverityLevel"
      createdAt:
        type: string
        description: Priority mapping creation date
        format: date-time
        x-scala-type: java.time.Instant
      updatedAt:
        type: string
        description: Priority mapping update date
        format: date-time
        x-scala-type: java.time.Instant

  MembershipPrivilegesBody:
    type: object
    description: Minimum permission level regarding configuring patterns, configuring which file extensions and branches are analyzed, and ignoring issues and files
    properties:
      permission:
        $ref: "#/definitions/MembershipPrivileges"

  MembershipPrivileges:
    type: string
    x-ms-enum:
      name: "MembershipPrivileges"
    enum:
      - OrganizationOwner
      - RepoAdmin
      - RepoWrite
      - RepoRead

  SecurityManagersResponse:
    type: object
    description: Security manager list sorted by organization admin status first and then alphabetically
    required:
      - pagination
      - data
    properties:
      pagination:
        $ref: '#/definitions/PaginationInfo'
      data:
        type: array
        items:
          $ref: '#/definitions/SecurityManager'

  SecurityManager:
    type: object
    description: Organization admin or security manager.
    required:
      - userId
      - email
      - createdAt
    properties:
      userId:
        description: User ID internal to Codacy.
        type: integer
        format: int64
        example: 867842577
      name:
        type: string
        example: "John Doe"
      email:
        type: string
        example: "example@codacy.com"
      createdAt:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2017-07-21T17:32:28Z"

  SecurityManagerBody:
    type: object
    description: Assign or revoke the Security Manager role for an organization member.
    required:
      - userId
    properties:
      userId:
        description: User ID of the organization member to be promoted to security manager.
        type: integer
        format: int64
        example: 867842577

  JiraIntegration:
    description: Details of a Jira integration for the security and risk management feature.
    type: object
    required:
      - organization_id
      - instance_id
      - instance_name
      - created_at
      - updated_at
    properties:
      organization_id:
        description: Codacy organization ID
        type: integer
        format: int64
        example: 867842577
      instance_id:
        description: Jira cloud ID of the organization
        type: string
        example: 1324a887-45db-1bf4-1e99-ef0ff456d421
      instance_name:
        description: Name of the Jira instance that Codacy has access to
        type: string
        example: codacy
      created_at:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2020-11-09T09:10:00Z"
      updated_at:
        type: string
        x-scala-type: java.time.Instant
        format: date-time
        example: "2020-11-09T09:10:00Z"

  JiraIntegrationResponse:
    description: A response with a Jira integration
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/JiraIntegration'

  SlackIntegration:
    description: Details of a Slack integration.
    type: object
    required:
      - organization_id
      - webhook_url
      - created_at
      - updated_at
    properties:
      organization_id:
        description: Codacy organization ID
        type: integer
        format: int64
        example: 867842577
      webhook_url:
        description: Slack Incoming Webhook URL to post notifications to.
        type: string
        # https://semgrep.dev/r?q=generic.secrets.security.detected-slack-webhook.detected-slack-webhook
        pattern: https:\/\/hooks\.slack\.com\/services\/T[a-zA-Z0-9_]{8,10}\/B[a-zA-Z0-9_]{8,10}\/[a-zA-Z0-9_]{24}
        example: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
      created_at:
        type: string
        format: date-time
        x-scala-type: java.time.Instant
        example: "2020-11-09T09:10:00Z"
      updated_at:
        type: string
        x-scala-type: java.time.Instant
        format: date-time
        example: "2020-11-09T09:10:00Z"

  SlackIntegrationRequest:
    type: object
    description: The request body to create or update the Slack integration of the organization.
    required:
      - webhook_url
    properties:
      webhook_url:
        description: Slack Incoming Webhook URL to post notifications to.
        type: string
        # https://semgrep.dev/r?q=generic.secrets.security.detected-slack-webhook.detected-slack-webhook
        pattern: https:\/\/hooks\.slack\.com\/services\/T[a-zA-Z0-9_]{8,10}\/B[a-zA-Z0-9_]{8,10}\/[a-zA-Z0-9_]{24}
        example: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX

  SlackIntegrationResponse:
    type: object
    required:
      - data
    properties:
      data:
        $ref: '#/definitions/SlackIntegration'

  SecurityRepositoriesResponse:
    description: List of repositories that have security issues.
    type: object
    required:
      - pagination
      - data
    properties:
      pagination:
        $ref: '#/definitions/PaginationInfo'
      data:
        type: array
        items:
          $ref: '#/definitions/RepositorySummary'

  SecurityCategoriesResponse:
    description: List of security categories that have security issues.
    type: object
    required:
      - pagination
      - data
    properties:
      pagination:
        $ref: '#/definitions/PaginationInfo'
      data:
        type: array
        items:
          type: string
          example: Cryptography

  CommitDetails:
    description: Details of a commit.
    type: object
    required:
      - commit
      - repository
    properties:
      commit:
        $ref: '#/definitions/Commit'
      repository:
        $ref: '#/definitions/RepositoryIdentification'

  ConfigureToolBody:
    type: object
    description: How to configure a tool.
    properties:
      patterns:
        type: array
        description: The patterns to enable or disable.
        items:
          $ref: '#/definitions/ConfigurePattern'

  ConfigurePattern:
    type: object
    description: A pattern to enable or disable.
    required:
      - id
      - enabled
    properties:
      id:
        type: string
        description: The pattern's id.
        example: ESLint_@typescript-eslint_no-shadow
      enabled:
        type: boolean
        description: Whether to enable or disable the pattern.
        example: true

  GitProviderAppPermissions:
    type: object
    description: Information about Codacy GitHub App repository permissions
    required:
      - contentPermission
    properties:
      contentPermission:
        type: boolean
        description: True if Codacy GitHub App has repository permissions for Contents, false otherwise.
        example: true

responses:
  BadRequest: #400
    description: 'Bad Request'
    x-ms-error-response: true
    schema:
      $ref: "#/definitions/BadRequest"

  Unauthorized: #401
    description: 'Unauthorized'
    x-ms-error-response: true
    schema:
      $ref: "#/definitions/Unauthorized"

  PaymentRequired: #402
    description: 'PaymentRequired'
    x-ms-error-response: true
    schema:
      $ref: "#/definitions/PaymentRequired"

  Forbidden: #403
    description: 'Forbidden'
    x-ms-error-response: true
    schema:
      $ref: "#/definitions/Forbidden"

  NotFound: #404
    description: 'Not Found'
    x-ms-error-response: true
    schema:
      $ref: "#/definitions/NotFound"

  MethodNotAllowed: #405
    description: 'Method Not Allowed'
    x-ms-error-response: true
    schema:
      $ref: "#/definitions/MethodNotAllowed"

  Conflict: #409
    description: 'Conflict'
    x-ms-error-response: true
    schema:
      $ref: "#/definitions/Conflict"

  UnprocessableEntity: #422
    description: 'Unprocessable Entity'
    x-ms-error-response: true
    schema:
      $ref: "#/definitions/UnprocessableEntity"

  InternalServerError: #500
    description: 'Internal Server Error'
    x-ms-error-response: true
    schema:
      $ref: "#/definitions/InternalServerError"

  NotImplemented: #501
    description: 'Not Implemented'
    x-ms-error-response: true
    schema:
      $ref: "#/definitions/NotImplemented"

  BadGateway: #502
    description: 'Bad Gateway'
    x-ms-error-response: true
    schema:
      $ref: "#/definitions/BadGateway"

parameters:
  cursorParam:
    in: query
    name: cursor
    required: false
    type: string
    description: >-
      Cursor to [specify a batch of results to request](https://docs.codacy.com/codacy-api/using-the-codacy-api/#using-pagination)
    x-example: "Yms345gh=="
    x-ms-parameter-location: 'method'

  limitParam:
    in: query
    name: limit
    required: false
    type: integer
    format: int32
    minimum: 1
    maximum: 100
    default: 100
    description: "Maximum number of items to return"
    x-example: 20
    x-ms-parameter-location: 'method'

  daysParam:
    in: query
    name: days
    required: false
    type: integer
    format: int32
    minimum: 1
    maximum: 365
    default: 31
    description: "Number of days with data to return."
    x-example: 31
    x-ms-parameter-location: 'method'

  providerParam:
    in: path
    name: provider
    description: "Git provider"
    required: true
    type: string
    enum: *providerEnum
    x-example: gh
    x-ms-parameter-location: 'method'
    x-ms-enum: *providerEnumName

  accountProviderParam:
    in: path
    name: accountProvider
    description: "Account Provider"
    required: true
    type: string
    enum: *accountProviderEnum
    x-example: github
    x-ms-parameter-location: 'method'
    x-ms-enum: *accountProviderEnumName

  accountIdentifierParam:
    in: path
    name: accountIdentifier
    description: "Account Identifier"
    required: true
    type: integer
    format: int64
    x-ms-parameter-location: 'method'

  tokenIdParam:
    in: path
    name: tokenId
    description: "API token ID"
    required: true
    type: integer
    format: int64
    x-example: 30
    x-ms-parameter-location: 'method'

  toolUuidParam:
    in: path
    name: toolUuid
    description: Tool unique identifier
    required: true
    type: string
    x-example: 847feb32-9ff2-11ea-bb37-0242ac130002
    x-ms-parameter-location: 'method'

  patternIdParam:
    in: path
    name: patternId
    description: "Pattern identifier"
    required: true
    type: string
    x-example: "ScalaStyle_BlockImportChecker"
    x-ms-parameter-location: 'method'

  searchParam:
    in: query
    name: search
    required: false
    type: string
    description: Filter the results searching by this string.
    x-example: "my-repository-name"
    x-ms-parameter-location: 'method'

  issueStatusParam:
    in: query
    name: status
    required: false
    type: string
    description: Issue status
    enum: *issueStatusEnum
    x-example: all
    x-ms-parameter-location: 'method'
    x-ms-enum: *issueStatusEnumName

  onlyPotentialParam:
    in: query
    name: onlyPotential
    description: If true, retrieves only potential issues
    required: false
    type: boolean
    x-example: "true"
    x-ms-parameter-location: 'method'

  onlyMembersParam:
    in: query
    name: onlyMembers
    required: false
    default: false
    type: boolean
    description: If true, returns only Codacy users. If false, returns also commit authors that aren't Codacy users.
    x-example: true
    x-ms-parameter-location: 'method'

  repositoriesParam:
    in: query
    name: repositories
    required: false
    type: string
    description: Deprecated, use [SearchOrganizationRepositoriesWithAnalysis](#searchorganizationrepositorieswithanalysis) instead
    x-example: "codacy-eslint,codacy-pmd"
    x-ms-parameter-location: 'method'

  branchStatusParam:
    in: query
    name: enabled
    required: false
    type: boolean
    description: Returns only the enabled or disabled branches.
    x-ms-parameter-location: 'method'

  remoteOrganizationNameParam:
    in: path
    name: remoteOrganizationName
    description: 'Organization name on the Git provider'
    required: true
    type: string
    x-example: "codacy"
    x-ms-parameter-location: 'method'

  gatePolicyId:
    in: path
    name: gatePolicyId
    description: 'Identifier of the gate policy'
    required: true
    type: integer
    format: int64
    x-example: 1
    x-ms-parameter-location: 'method'

  repositoryNameParam:
    in: path
    name: repositoryName
    description: 'Repository name on the Git provider organization'
    required: true
    type: string
    x-example: "awesome-repo"
    x-ms-parameter-location: 'method'

  branchNamePathParam:
    in: path
    name: branchName
    description: 'Repository branch name'
    required: true
    type: string
    x-example: "master"
    x-ms-parameter-location: 'method'

  branchNameParam:
    in: query
    name: branch
    description: |
      Name of a [repository branch enabled on Codacy](https://docs.codacy.com/repositories-configure/managing-branches/),
      as returned by the endpoint [listRepositoryBranches](#listrepositorybranches).
      By default, uses the main branch defined on the Codacy repository settings.
    required: false
    type: string
    x-example: "master"
    x-ms-parameter-location: 'method'

  churnFeedbackParam:
    in: body
    name: reasons
    description: 'Reasons'
    required: false
    schema:
      $ref: "#/definitions/ChurnFeedback"

  repositoryFilterParam:
    in: query
    name: filter
    description: "RepositoryFilter"
    required: false
    type: string
    enum: *repositoryFilterEnum
    x-example: "Synced"
    x-ms-parameter-location: 'method'
    x-ms-enum: *repositoryFilterName

  languagesFilterParam:
    in: query
    name: languages
    description: "Languages filter"
    required: false
    type: string
    x-example: Scala,Java,Javascript
    x-ms-parameter-location: 'method'

  emailListParam:
    in: body
    name: emailList
    description: 'List of emails'
    required: true
    schema:
      type: array
      items:
        type: string

  filesSearchFilter:
    in: query
    name: search
    description: Filter files that include this string anywhere in their relative path
    required: false
    type: string
    x-example: file.js
    x-ms-parameter-location: 'method'

  searchIssuesFilter:
    in: body
    name: filters
    description: Only return issues matching these filters
    schema:
      $ref: "#/definitions/SearchRepositoryIssuesBody"

  commitUuid:
    in: path
    name: commitUuid
    description: UUID or SHA string that identifies the commit
    required: true
    type: string
    x-example: "2957025d42e8daadf937d4044516f991d21deea4"
    x-ms-parameter-location: 'method'

  commitId:
    in: path
    name: commitId
    description: Identifier of the commit
    required: true
    type: integer
    format: int64
    x-example: "123412645234"
    x-ms-parameter-location: 'method'

  pullRequestNumberParam:
    in: path
    name: pullRequestNumber
    description: Pull request number
    required: true
    type: integer
    format: int32
    x-example: 738490
    x-ms-parameter-location: 'method'

  commitUuidParam:
    in: path
    name: commitUuid
    description: UUID or SHA identifier of the source commit
    required: true
    type: string

  codingStandardIdParam:
    in: path
    name: codingStandardId
    description: Coding standard identifier
    required: true
    type: integer
    format: int64
    x-example: 1
    x-ms-parameter-location: 'method'

  severityLevelsParam:
    in: query
    name: severityLevels
    description: Filter by a comma separated list of code pattern severity levels. The allowed values are 'Error', 'Warning', and 'Info'
    required: false
    type: string
    x-example: "Error,Warning"
    x-ms-parameter-location: 'method'

  categoriesParam:
    in: query
    name: categories
    description: Filter by a comma separated list of code pattern categories. The allowed values are 'Security', 'ErrorProne', 'CodeStyle', 'Compatibility', 'UnusedCode', and 'Performance'
    required: false
    type: string
    x-example: "Security,ErrorProne"
    x-ms-parameter-location: 'method'

  patternsSortParam:
    in: query
    name: sort
    description: Field used to sort the tool's code patterns.  The allowed values are 'category', 'recommended', and 'severity'
    required: false
    type: string
    x-example: "category"
    x-ms-parameter-location: 'method'

  directionParam:
    in: query
    name: direction
    description: Sort direction. Possible values are 'asc' (ascending) or 'desc' (descending).
    required: false
    type: string
    x-example: "desc"
    x-ms-parameter-location: 'method'

  sourceRepositoryParam:
    in: query
    name: sourceRepository
    description: Name of a repository in the same organization to use as a template when creating the new coding standard
    required: false
    type: string
    x-ms-parameter-location: 'method'

  sourceCodingStandardParam:
    in: query
    name: sourceCodingStandard
    description: >-
      Identifier of an existing coding standard to use as a template when creating a new coding standard,
      including the enabled repositories and default coding standard status
    required: false
    type: integer
    format: int64
    x-example: 1
    x-ms-parameter-location: 'method'

  toolConfigurationParam:
    in: body
    name: toolConfiguration
    description: 'Configuration of a tool and its code patterns'
    required: true
    schema:
      $ref: "#/definitions/ToolConfiguration"

  filesSortParam:
    in: query
    name: sort
    description: Field used to sort the list of files. The allowed values are 'filename', 'issues', 'grade', 'duplication', 'complexity', and 'coverage'.
    required: false
    type: string
    x-example: "category"
    x-ms-parameter-location: 'method'

  branchesSortParam:
    in: query
    name: sort
    description: Field used to sort the list of branches. The allowed values are 'name' and 'last-updated'.
    required: false
    type: string
    x-example: "category"
    x-ms-parameter-location: 'method'

  fileIdParam:
    in: path
    name: fileId
    description: Identifier of a file in a specific commit
    required: true
    type: integer
    format: int64
    x-example: 1
    x-ms-parameter-location: 'method'

  startLineParam:
    in: query
    name: startLine
    description: Line number where the code block starts
    required: false
    type: integer
    format: int32
    x-example: 1
    x-ms-parameter-location: 'method'

  endLineParam:
    in: query
    name: endLine
    description: Line number where the code block ends
    required: false
    type: integer
    format: int32
    x-example: 10
    x-ms-parameter-location: 'method'

  issueParam:
    in: path
    name: issueId
    description: Issue identifier
    required: true
    type: string
    x-example: 1
    x-ms-parameter-location: 'method'

  oauthCodeParam:
    in: query
    name: oauthCode
    description: The OAuth code to allow authentication as the user installing the Jira App.
    required: true
    type: string
    x-example: 6nGtF5eij1YuEqQXr7L9OxA0RLHZ21tEQNZq1DZJzuY
    x-ms-parameter-location: 'method'

  userId:
    in: path
    name: userId
    description: 'Identifier of the organization member'
    required: true
    type: integer
    format: int64
    x-example: 1
    x-ms-parameter-location: 'method'

  srmPriorityParam:
    in: query
    name: priority
    type: array
    collectionFormat: multi
    items:
      type: string
    required: false
    enum: *SrmPriorityEnum
    x-example: "priority=Critical&priority=High"
    x-ms-parameter-location: 'method'

  srmStatusParam:
    in: query
    name: status
    type: array
    collectionFormat: multi
    items:
      type: string
    required: false
    enum: *SrmStatusEnum
    x-example: "status=Overdue&status=OnTrack"
    x-ms-parameter-location: 'method'

  srmSecurityCategoryParam:
    in: query
    name: category
    description: Security categories to filter by. Use `_other_` to search for issues that don't have a security category.
    type: array
    collectionFormat: multi
    items:
      type: string
    required: false
    x-example: "category=Cryptography&category=OutdatedDependencies"
    x-ms-parameter-location: 'method'

  resultDataIdParam:
    in: path
    name: resultDataId
    description: Identifier of an open issue.
    required: true
    type: integer
    format: int64
    x-example: 1
    x-ms-parameter-location: 'method'

  deleteIssuesForDisabledPatternsParam:
    in: query
    name: deleteIssuesForDisabledPatterns
    description: Whether to delete related issues when disabling a tool's pattern.
    required: false
    type: boolean
    default: false
    x-example: true
    x-ms-parameter-location: 'method'


security:
  - ApiKeyAuth: [ ]

# the tags groups related operations and the definition and order here
# allow for explicit ordering on how they appear
tags:
  - name: version
  - name: analysis
  - name: repository
  - name: account
  - name: organization
  - name: people
  - name: billing
  - name: integrations
  - name: configuration
  - name: health
  - name: admin
  - name: languages
  - name: tools
  - name: coding standards
  - name: file
  - name: coverage
  - name: security

paths:

  /version:
    get:
      tags:
        - version
      x-jvm-package: version
      summary: Return the version of the Codacy installation
      operationId: getVersion
      security: [ ] # No authentication
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Version'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: List an organization repositories with analysis information for the authenticated user.
      description: List an organization repositories with analysis information for the authenticated user. For Bitbucket you must URL encode the cursor before using it in subsequent API calls, as the pagination comes directly from the Git provider.
      operationId: listOrganizationRepositoriesWithAnalysis
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/searchParam'
        - $ref: '#/parameters/repositoriesParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/RepositoryWithAnalysisListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'

  /search/analysis/organizations/{provider}/{remoteOrganizationName}/repositories:
    post:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Search organization repositories with analysis information for the authenticated user.
      description: For Bitbucket you must URL encode the cursor before using it in subsequent API calls, as the pagination comes directly from the Git provider.
      operationId: searchOrganizationRepositoriesWithAnalysis
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
        - in: body
          name: searchOrganizationRepositoriesWithAnalysisBody
          description: Search query body
          required: true
          schema:
            $ref: "#/definitions/SearchOrganizationRepositoriesWithAnalysis"
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/RepositoryWithAnalysisListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Get a repository with analysis information for the authenticated user
      operationId: getRepositoryWithAnalysis
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/branchNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/RepositoryWithAnalysisResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/tools:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Get analysis tools settings of a repository
      description: |
        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: getTools
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/AnalysisToolsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/tools/{toolUuid}:
    patch:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: |
        Configure an analysis tool by enabling and disabling its patterns for a repository.
        This endpoint will apply the changes without verifying if the repository belongs to a coding standard.
      operationId: configureTool
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/toolUuidParam'
        - $ref: '#/parameters/deleteIssuesForDisabledPatternsParam'
        - in: body
          name: configureToolBody
          required: true
          schema:
            $ref: '#/definitions/ConfigureToolBody'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/analysis-progress:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Get the analysis progress of a repository
      description: |
        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: getFirstAnalysisOverview
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/branchNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/FirstAnalysisOverviewResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/patterns/copy:
    post:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Bulk copy the patterns from a given repository
      description: |
        Copy patterns from the selected repository to the targeted ones requested in the body of the operation.
        This endpoints is limited to 100 target repositories.
      operationId: copyPatternsBulk
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - in: body
          name: copyPatternsBulkBody
          description: Repository names to have their patterns imported to, maximum 100 items.
          required: true
          schema:
            $ref: "#/definitions/CopyPatternsBody"
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/CopyPatternsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: List pull requests from a repository that the user as access to
      description: |
        You can search this endpoint for either `last-updated` (default), `impact` or `merged`

        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: listRepositoryPullRequests
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/searchParam'
        - in: query
          name: includeNotAnalyzed
          description: If true, also return pull requests that weren't analyzed
          type: boolean
          required: false
          default: false
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/PullRequestWithAnalysisListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests/{pullRequestNumber}:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Get pull request from a repository
      description: |
        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: getRepositoryPullRequest
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/pullRequestNumberParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/PullRequestWithAnalysis'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /coverage/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests/{pullRequestNumber}:
    get:
      tags:
        - coverage
      x-jvm-package: coverage
      summary: Get pull request coverage information from a repository
      description: |
        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: getRepositoryPullRequestCoverage
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/pullRequestNumberParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/PullRequestWithCoverageResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /coverage/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests/{pullRequestNumber}/files:
    get:
      tags:
        - coverage
      x-jvm-package: coverage
      summary: Get pull request files coverage information from a repository
      description: |
        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: getRepositoryPullRequestFilesCoverage
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/pullRequestNumberParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/PullRequestFilesCoverageResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests/{pullRequestNumber}/commits:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Return analysis results for the commits in a pull request
      operationId: getPullRequestCommits
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/pullRequestNumberParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/cursorParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/CommitWithAnalysisListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests/{pullRequestNumber}/coverage/status:
    get:
      tags:
        - analysis
        - coverage
      x-jvm-package: analysis
      summary: List all coverage reports uploaded for the common ancestor commit and head commit of a pull request branch
      operationId: getPullRequestCoverageReports
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/pullRequestNumberParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/CoveragePullRequestResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests/{pullRequestNumber}/issues:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: List issues found in a pull request
      description: Returns a list of issues found in a pull request. We can request either new or fixed issues.
      operationId: listPullRequestIssues
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/pullRequestNumberParam'
        - $ref: '#/parameters/issueStatusParam'
        - $ref: '#/parameters/onlyPotentialParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/PullRequestIssuesResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests/{pullRequestNumber}/clones:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: List duplicate code blocks found in a pull request
      description: Returns a list of new or removed duplicate code blocks found in a pull request.
      operationId: listPullRequestClones
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/pullRequestNumberParam'
        - $ref: '#/parameters/issueStatusParam'
        - $ref: '#/parameters/onlyPotentialParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ClonesResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/commits/{commitUuid}/clones:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: List duplicate code blocks found in a commit
      description: Returns a list of new or removed duplicate code blocks found in a commit.
      operationId: listCommitClones
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - in: path
          name: commitUuid
          description: UUID or SHA identifier of the source commit
          required: true
          type: string
          x-example: "2957025d42e8daadf937d4044516f991d21deea4"
          x-ms-parameter-location: 'method'
        - $ref: '#/parameters/issueStatusParam'
        - $ref: '#/parameters/onlyPotentialParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ClonesResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests/{pullRequestNumber}/logs:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Get analysis logs for a pull request
      description: Returns the analysis logs for the specified pull request.
      operationId: listPullRequestLogs
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/pullRequestNumberParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/LogsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/commits/{commitUuid}/logs:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Get analysis logs for a commit
      description: Returns the analysis logs for the specified commit.
      operationId: listCommitLogs
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/commitUuidParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/LogsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/quality-settings:
    get:
      deprecated: true
      tags:
        - analysis
      x-jvm-package: analysis
      summary: >-
        [Deprecated: use [getQualitySettingsForRepository](#getqualitysettingsforrepository) instead]
        Get quality settings for the specific repository
      description: |
        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: getRepositoryQualitySettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/DeprecatedRepositoryQualitySettingsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/commits/{commitUuid}/files:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: List files of a commit with analysis results
      operationId: listCommitFiles
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/commitUuid'
        - in: query
          name: filter
          required: false
          description: Optional field to filter the results. The possible values are empty (default, return files changed in the commit or with coverage changes) or `withCoverageChanges` (return files with coverage changes).
          type: string
          enum:
            - withCoverageChanges
          x-ms-parameter-location: 'method'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/filesSearchFilter'
        - in: query
          name: sortColumn
          required: false
          description: Field used to sort the results. The possible values are `deltaCoverage` (to sort by the coverage variation value of the files) , `totalCoverage` (to sort by the total coverage value of the files) or `filename` (to sort by the name of the files).
          type: string
          enum:
            - totalCoverage
            - deltaCoverage
            - filename
        - in: query
          name: columnOrder
          required: false
          description: Sort direction. The possible values are `asc` (ascending) or `desc` (descending).
          type: string
          enum:
            - asc
            - desc

      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/FileAnalysisListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests/{pullRequestNumber}/files:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: List files of a pull request with analysis results
      operationId: listPullRequestFiles
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/pullRequestNumberParam'
        - in: query
          name: filter
          required: false
          description: Optional field to filter the results. The possible values are empty (default, return files changed in the commit or with coverage changes) or  `withCoverageChanges` (return only files with coverage changes).
          type: string
          enum:
            - withCoverageChanges
          x-ms-parameter-location: 'method'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/filesSearchFilter'
        - in: query
          name: sortColumn
          required: false
          description: Field used to sort the results. The possible values are `deltaCoverage` (to sort by the coverage variation value of the files) , `totalCoverage` (to sort by the total coverage value of the files) or `filename` (to sort by the name of the files).
          type: string
          enum:
            - totalCoverage
            - deltaCoverage
            - filename
        - in: query
          name: columnOrder
          required: false
          description: Sort direction. The possible values are `asc` (ascending) or `desc` (descending).
          type: string
          enum:
            - asc
            - desc

      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/FileAnalysisListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/follow:
    post:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Follow a repository that was already added to Codacy
      operationId: followAddedRepository
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/AddedStateResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    delete:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: unfollow a repository
      operationId: unfollowRepository
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/quality/repository:
    get:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Get quality settings for the specific repository
      operationId: getQualitySettingsForRepository
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/RepositoryQualitySettingsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    put:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Update quality settings for the specific repository
      operationId: updateRepositoryQualitySettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - in: body
          name: updatedQualitySettings
          description: "The new value for the quality settings of the repository"
          required: true
          schema:
            $ref: "#/definitions/RepositoryQualitySettings"
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/RepositoryQualitySettingsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/ssh-user-key:
    post:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Regenerate the user SSH key that Codacy uses to clone the repository
      description: Codacy automatically adds the new public user SSH key to the user account on the Git provider. Using a user SSH key is recommended if your repository includes submodules.
      operationId: regenerateUserSshKey
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/SshKeySettingResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/ssh-repository-key:
    post:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Regenerate the SSH key that Codacy uses to clone the repository
      description: Codacy automatically adds the new public SSH key to the repository on the Git provider.
      operationId: regenerateRepositorySshKey
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/SshKeySettingResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/stored-ssh-key:
    get:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Get the public SSH key for the repository
      description: Returns the most recently generated public SSH key, which can be either a user or repository SSH key.
      operationId: getRepositoryPublicSshKey
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/SshKeySettingResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/sync:
    post:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Synchronize project name and visibility with Git provider
      operationId: syncRepositoryWithProvider
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/SyncProviderSettingResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/analysis:
    get:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Get the status of the repository setting **Run analysis on your build server**
      operationId: getBuildServerAnalysisSetting
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/BuildServerAnalysisSettingResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '405':
          $ref: '#/responses/MethodNotAllowed'
        '500':
          $ref: '#/responses/InternalServerError'
    patch:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Updates the status of the repository setting **Run analysis on your build server**
      operationId: updateBuildServerAnalysisSetting
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - in: body
          name: targetBuildServerAnalysisSetting
          description: New value for the repository setting **Run analysis on your build server**
          required: true
          schema:
            $ref: "#/definitions/BuildServerAnalysisSettingRequest"
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/BuildServerAnalysisSettingResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '405':
          $ref: '#/responses/MethodNotAllowed'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/file-extensions:
    get:
      tags:
        - file
      x-jvm-package: fileExtension
      summary: Get the list of supported file extensions associated with each language in a repository
      operationId: getFileExtensionsSettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/FileExtensionsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'
    patch:
      tags:
        - file
      x-jvm-package: fileExtension
      summary: Update the custom file extensions for a repository
      operationId: patchFileExtensionsSettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - in: body
          name: "FileExtensionsBody"
          required: true
          schema:
            $ref: "#/definitions/FileExtensionsBody"
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/quality/commits:
    get:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Get quality settings for the commits of a repository.
      description: |
        `diffCoverageThreshold` is never returned because this threshold isn't currently supported for commits.
      operationId: getCommitQualitySettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/QualitySettingsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    put:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Update quality settings for the commits of a repository
      operationId: updateCommitQualitySettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - in: body
          name: updatedQualitySettings
          description: "The new value for the quality settings of commits in a repository"
          required: true
          schema:
            $ref: "#/definitions/QualityGate"
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/QualitySettingsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/quality/commits/reset:
    post:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Reset quality settings for the commits of a repository to Codacy’s default values
      operationId: resetCommitsQualitySettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/QualitySettingsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/quality/pull-requests/reset:
    post:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Reset quality settings for the pull requests of a repository to Codacy’s default values
      operationId: resetPullRequestsQualitySettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/QualitySettingsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/quality/repository/reset:
    post:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Reset quality settings for the repository to Codacy’s default values
      operationId: resetRepositoryQualitySettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/RepositoryQualitySettingsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/settings/quality/pull-requests:
    get:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Get quality settings for the pull requests of a repository
      operationId: getPullRequestQualitySettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/QualitySettingsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    put:
      tags:
        - repository
        - configuration
      x-jvm-package: repository
      summary: Update quality settings for the pull requests of a repository
      operationId: updatePullRequestQualitySettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - in: body
          name: updatedQualitySettings
          description: "The new value for the quality settings of pull requests in the repository"
          required: true
          schema:
            $ref: "#/definitions/QualityGate"
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/QualitySettingsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/pull-requests:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: List an organization pull requests from repositories that the user as access to
      description: You can search this endpoint for either `last-updated` (default), `impact` or `merged`
      operationId: listOrganizationPullRequests
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/searchParam'
        - $ref: '#/parameters/repositoriesParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/PullRequestWithAnalysisListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/commit-statistics:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Lists commit analysis statistics in the last `n` days that have analysis data
      description: |
        Returns the last `n` days with available data. This means that the returned days may not match the last `n` calendar days.

        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: listCommitAnalysisStats
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/branchNameParam'
        - $ref: '#/parameters/daysParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/CommitAnalysisStatsListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/category-overviews:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Lists analysis category overviews for a repository that the user as access to
      description: |
        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: listCategoryOverviews
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/branchNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/CategoryOverviewListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/issues/{resultDataId}:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Returns information about an issue that Codacy found in a repository and that is still open.
      operationId: getIssue
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/resultDataIdParam'
      responses:
        '200':
          description: An issue found in a repository.
          schema:
            $ref: '#/definitions/GetIssueResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: "#/responses/InternalServerError"

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/issues/search:
    post:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: List issues in a repository
      description: |
        Returns information about the issues that Codacy found in a repository as available on the [Issues page](https://docs.codacy.com/repositories/issues-view/).
        Use [SearchRepositoryIssuesBody](#tocssearchrepositoryissuesbody) to filter the returned issues.
      operationId: searchRepositoryIssues
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/searchIssuesFilter'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: List of issues in the repository
          schema:
            $ref: '#/definitions/SearchRepositoryIssuesListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: "#/responses/InternalServerError"

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/issues/overview:
    post:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Get an overview of the issues in a repository
      description: |
        Returns information about the number of issues that Codacy found in a repository as available on the [Issues page](https://docs.codacy.com/repositories/issues-view/).
        Use [SearchRepositoryIssuesBody](#tocssearchrepositoryissuesbody) to filter the returned issues.
      operationId: issuesOverview
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/searchIssuesFilter'
      responses:
        '200':
          description: Overview of the issues in the repository
          schema:
            $ref: '#/definitions/IssuesOverviewResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: "#/responses/InternalServerError"

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/issues/{issueId}:
    patch:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Ignore or unignore an issue
      operationId: updateIssueState
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/issueParam'
        - in: body
          name: issueState
          description: New ignored status of the issue
          required: true
          schema:
            $ref: "#/definitions/IssueStateBody"
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: "#/responses/InternalServerError"

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/ignoredIssues/search:
    post:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: List ignored issues in a repository
      description: >-
        Returns information about the issues that Codacy found in a repository and were ignored on the Codacy UI.
        Use [SearchRepositoryIssuesBody](#tocssearchrepositoryissuesbody) to filter the returned ignored issues.
      operationId: searchRepositoryIgnoredIssues
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/searchIssuesFilter'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: List of ignored issues in the repository
          schema:
            $ref: '#/definitions/IgnoredIssuesListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/commits:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Return analysis results for the commits in a branch
      operationId: listRepositoryCommits
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/branchNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: List of commits with analysis results
          schema:
            $ref: '#/definitions/CommitWithAnalysisListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/commits/{commitUuid}:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Get analysis results for a commit
      operationId: getCommit
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/commitUuid'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: "#/definitions/CommitWithAnalysis"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/commits/{commitUuid}/deltaStatistics:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: Get analysis statistics of a commit
      description: >-
        Returns the quality metric deltas introduced by a commit.
        The values of the metrics are 0 or null if Codacy didn't analyze the commit yet.

        To obtain the full analysis statistics for the repository use the endpoint [getRepositoryWithAnalysis](#getrepositorywithanalysis).
      operationId: getCommitDeltaStatistics
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/commitUuid'
      responses:
        '200':
          description: Succesful operation
          schema:
            $ref: '#/definitions/CommitDeltaStatistics'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /analysis/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/commits/{srcCommitUuid}/deltaIssues:
    get:
      tags:
        - analysis
      x-jvm-package: analysis
      summary: List the issues introduced or fixed by a commit
      description: >-
        Returns a list of issues introduced or fixed given a source commit SHA. By default, Codacy will calculate the
        issues by creating a delta between the source commit and its parent commit. As an alternative, you can also
        provide a destination commit to calculate the deltas.

        To list all issues in the repository, use [searchRepositoryIssues](#searchrepositoryissues).
      operationId: listCommitDeltaIssues
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - in: path
          name: srcCommitUuid
          description: UUID or SHA string that identifies the source commit
          required: true
          type: string
          x-example: "2957025d42e8daadf937d4044516f991d21deea4"
          x-ms-parameter-location: 'method'
        - in: query
          name: targetCommitUuid
          description: UUID or SHA string that identifies the target commit
          required: false
          type: string
          x-example: "2957025d42e8daadf937d4044516f991d21deea4"
          x-ms-parameter-location: 'method'
        - $ref: '#/parameters/issueStatusParam'
        - $ref: '#/parameters/onlyPotentialParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/CommitDeltaIssuesResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /user:
    get:
      tags:
        - account
      x-jvm-package: account
      summary: Get the authenticated user
      description: Get the authenticated user
      operationId: getUser
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/UserResponse'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/InternalServerError'
    delete:
      tags:
        - account
      x-jvm-package: account
      operationId: deleteUser
      responses:
        '204':
          description: 'Successful operation'
        '401':
          $ref: '#/responses/Unauthorized'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'
    patch:
      tags:
        - account
      x-jvm-package: account
      operationId: patchUser
      parameters:
        - in: body
          name: "UserBody"
          required: true
          schema:
            $ref: "#/definitions/UserBody"
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/UserResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /user/organizations:
    get:
      tags:
        - account
      x-jvm-package: account
      summary: List organizations for the authenticated user
      description: List organizations for the authenticated user
      operationId: listUserOrganizations
      parameters:
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/OrganizationListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/InternalServerError'

  /user/organizations/{provider}:
    get:
      tags:
        - account
      x-jvm-package: account
      summary: List organizations for the authenticated user
      description: List organizations for the authenticated user
      operationId: listOrganizations
      parameters:
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/providerParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/OrganizationListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/InternalServerError'

  /user/integrations:
    get:
      tags:
        - account
      x-jvm-package: account
      summary: List integrations for the authenticated user
      description: List integrations for the authenticated user
      operationId: listUserIntegrations
      parameters:
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/IntegrationListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/InternalServerError'

  /user/integrations/{accountProvider}:
    delete:
      tags:
        - account
      x-jvm-package: account
      operationId: deleteIntegration
      parameters:
        - $ref: '#/parameters/accountProviderParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}:
    get:
      tags:
        - organization
      x-jvm-package: organization
      summary: Get organization
      operationId: getOrganization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/OrganizationWithMetaResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    delete:
      tags:
        - organization
      x-jvm-package: organization
      summary: Delete organization
      description: Delete organization
      operationId: deleteOrganization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/churnFeedbackParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/billing:
    get:
      tags:
        - organization
      x-jvm-package: organization
      summary: Get detailed information about organization billing
      description: Get detailed information about organization billing
      operationId: organizationDetailedBilling
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/OrganizationBillingInformationResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/billing/sync:
    post:
      tags:
        - organization
      x-jvm-package: organization
      summary: Sync the information about organization billing
      operationId: syncMarketplaceBilling
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/integrations/providerSettings/apply:
    post:
      tags:
        - organization
      x-jvm-package: organization
      summary: Apply default settings to all repositories
      operationId: applyProviderSettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'

  /organizations/{provider}/{remoteOrganizationName}/integrations/providerSettings:
    get:
      tags:
        - organization
      x-jvm-package: organization
      summary: Get Git provider settings
      operationId: getProviderSettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ProviderIntegrationSettingsBody'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'
    patch:
      tags:
        - organization
      x-jvm-package: organization
      summary: Create or update Git provider settings
      operationId: updateProviderSettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - in: body
          name: providerIntegrationSettingsBody
          required: true
          schema:
            $ref: '#/definitions/ProviderIntegrationSettingsPatchBody'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'

  /organizations/{provider}/{remoteOrganizationName}/repositories:
    get:
      tags:
        - organization
      x-jvm-package: organization
      summary: List an organization repositories for the authenticated user.
      description: |
        List an organization's repositories for the authenticated user.
        For Bitbucket you must URL encode the cursor before using it in subsequent API calls, as the pagination comes directly from the Git provider.
        This endpoint may return more results than those specified in the limit parameter.
        If this endpoint doesn't return your repositories after you've made recent changes to the permissions on your Git provider,
        use the endpoint [cleanCache](#cleanCache) to force refreshing the list of repositories for the authenticated user.

        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: listOrganizationRepositories
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/searchParam'
        - $ref: '#/parameters/repositoryFilterParam'
        - $ref: '#/parameters/languagesFilterParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/RepositoryListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'

  /organizations/{provider}/{remoteOrganizationName}/people:
    get:
      tags:
        - people
      x-jvm-package: organization
      summary: List people of an organization
      description: List people of an organization
      operationId: listPeopleFromOrganization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/searchParam'
        - $ref: '#/parameters/onlyMembersParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ListPeopleResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    post:
      tags:
        - people
      x-jvm-package: organization
      summary: Add people to organization
      description: Add people to organization as members or committers (depending if they have a pending request already)
      operationId: addPeopleToOrganization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/emailListParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  # Keep it in sync with CsvController.scala
  # Given the new standards for reporting endpoints, this be should moved to /report/organizations/{p}/{ron}/people
  # but doing so would break the API's current version.
  /organizations/{provider}/{remoteOrganizationName}/peopleCsv:
    get:
      tags:
        - people
      # Given the new standard for reporting and streaming endpoints, this should be moved to report.people.streaming.
      x-jvm-package: peopleCsv
      summary: Generate a CSV file listing the people of an organization
      description: >
        Generate a CSV file containing the `name`, `email`, `lastLogin`,
        and `lastAnalysis` of each person of the organization
      operationId: listPeopleFromOrganizationCsv
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            type: string
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/analysisConfigurationMinimumPermission:
    patch:
      tags:
        - organization
      x-jvm-package: organization
      summary: Configure what your organization members can do across the Codacy platform
      description: Define the lowest permission level that can configure patterns, configure which file extensions and branches are analyzed, and ignore issues and files
      operationId: patchOrganizationSettings
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - in: body
          name: permissionLevel
          description: "New permission level"
          required: true
          schema:
            $ref: "#/definitions/MembershipPrivilegesBody"
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/people/remove:
    post:
      tags:
        - people
      x-jvm-package: organization
      summary: Remove people from an organization
      description: Remove people from an organization
      operationId: removePeopleFromOrganization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - in: body
          name: removePeopleParameter
          description: "List of committers/members to remove"
          required: true
          schema:
            $ref: "#/definitions/RemovePeopleBody"
      responses:
        '200':
          description: Remove people response
          schema:
            $ref: "#/definitions/RemovePeopleResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/gitProviderAppPermissions:
    get:
      tags:
        - app
      x-jvm-package: organization
      summary: Returns the status of the permissions required by the Codacy Git provider App installed on the organization
      operationId: gitProviderAppPermissions
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: Successful operation. i.e. we could determine permissions.
          schema:
            $ref: "#/definitions/GitProviderAppPermissions"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/people/suggestions:
    get:
      tags:
        - people
      x-jvm-package: organization
      summary: List people suggestions for an organization
      description: List people suggestions for an organization
      operationId: peopleSuggestionsForOrganization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/searchParam'
      responses:
        '200':
          description: List people suggestions response
          schema:
            $ref: "#/definitions/SuggestedAuthorsResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/reanalyzeCommit:
    post:
      tags:
        - repository
      x-jvm-package: repository
      summary: Reanalyze a specific commit in a repository
      operationId: reanalyzeCommitById
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - in: body
          name: commitUuid
          description: "UUID or SHA string that identifies the commit"
          required: true
          schema:
            $ref: "#/definitions/CommitUuidRequest"
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}:
    get:
      tags:
        - repository
      x-jvm-package: repository
      summary: Fetch the specified repository
      description: |
        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: getRepository
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/RepositoryResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    delete:
      tags:
        - repository
      x-jvm-package: repository
      summary: Delete the specified repository
      operationId: deleteRepository
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/people/suggestions:
    get:
      tags:
        - people
      x-jvm-package: repository
      summary: List people suggestions for a repository
      description: List people suggestions for a repository
      operationId: peopleSuggestionsForRepository
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/searchParam'
      responses:
        '200':
          description: List people suggestions response
          schema:
            $ref: "#/definitions/RepositorySuggestedAuthorsResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/branches:
    get:
      tags:
        - repository
      x-jvm-package: repository
      summary: List repository branches
      description: |
        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: listRepositoryBranches
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/branchStatusParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/searchParam'
        - $ref: '#/parameters/branchesSortParam'
        - $ref: '#/parameters/directionParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/BranchListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/branches/{branchName}:
    patch:
      tags:
        - repository
      x-jvm-package: repository
      summary: Update the settings for a repository branch
      description: |
        Toggle analysis for a branch.
      operationId: updateRepositoryBranchConfiguration
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/branchNamePathParam'
        - in: body
          name: updateRepositoryBranchConfigurationBody
          required: true
          schema:
            $ref: '#/definitions/UpdateRepositoryBranchConfigurationBody'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/joinMode:
    post:
      tags:
        - organization
      x-jvm-package: organization
      summary: Update the join mode of an organization
      operationId: updateJoinMode
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - in: body
          name: joinMode
          description: "New join mode of the organization"
          required: true
          schema:
            $ref: "#/definitions/JoinModeRequest"
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/branches/{branchName}/setDefault:
    post:
      tags:
        - repository
      x-jvm-package: repository
      summary: Set branch as default
      description: |
        Sets the default branch for a repository. The new default branch must already be enabled on Codacy.
      operationId: setRepositoryBranchAsDefault
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/branchNamePathParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/gh/{remoteOrganizationName}/repositories/{repositoryName}/badge:
    post:
      tags:
        - repository
      x-jvm-package: repository
      summary: Create a pull request adding the Codacy analysis badge to the repository
      description: |
        Creates a pull request adding the Codacy static code analysis badge
        to the README of the GitHub repository if the repository is public
        and doesn't already have a badge.

        **Note:** The pull request is created asynchronously and may fail
        even if this endpoint responds successfully.
      operationId: createBadgePullRequest
      parameters:
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/people/leave/check:
    get:
      tags:
        - organization
      x-jvm-package: organization
      summary: Check if the user can leave the organization
      description: >-
        Check if the user can leave the organization or returns the reasons why they can not.
      operationId: checkIfUserCanLeave
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/LeaveOrgCheckResult'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/join:
    get:
      tags:
        - organization
      x-jvm-package: organization
      summary: List requests to join an organization
      description: Endpoint to list requests to join an organization by provider and organization name
      operationId: listOrganizationJoinRequests
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
        - $ref: '#/parameters/searchParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ListRequestsToJoinResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    post:
      tags:
        - organization
      x-jvm-package: organization
      summary: Join an organization
      description: Endpoint to join an organization by provider and name
      operationId: joinOrganization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/JoinResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '402':
          $ref: '#/responses/PaymentRequired'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    delete:
      tags:
        - organization
      x-jvm-package: organization
      summary: Decline Requests to join an organization
      description: Endpoint to decline request to join an organization by provider, name and user emails to be rejected
      operationId: declineRequestsToJoinOrganization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/emailListParam'
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/join/{accountIdentifier}:
    delete:
      tags:
        - organization
      x-jvm-package: organization
      summary: Delete a request to join an organization
      description: Endpoint to delete a request to join an organization by provider, name and user id
      operationId: deleteOrganizationJoinRequest
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/accountIdentifierParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/cache/clean:
    post:
      tags:
        - organization
      x-jvm-package: organization
      summary: Clean organization cache for the authenticated user
      description: Clean cached information regarding the authenticated user on the specified organization, such as the list of repositories in the organization.
      operationId: cleanCache
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /repositories:
    post:
      tags:
        - repository
      x-jvm-package: repository
      summary: Add a repository to Codacy
      description: Add a new repository to an existing organization on Codacy
      operationId: addRepository
      parameters:
        - in: header
          name: caller
          description: "Caller"
          required: false
          type: string
        - in: body
          name: addRepositoryParameter
          description: "Information of repository to add"
          required: true
          schema:
            $ref: "#/definitions/AddRepositoryBody"
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: "#/definitions/Repository"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '402':
          $ref: '#/responses/PaymentRequired'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations:
    post:
      tags:
        - organization
      x-jvm-package: organization
      summary: Add an organization to Codacy
      description: Add an organization from a Git provider to Codacy
      operationId: addOrganization
      parameters:
        - in: body
          name: addOrganizationParameter
          description: "Informations of the organization to add"
          required: true
          schema:
            $ref: "#/definitions/AddOrganizationBody"
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: "#/definitions/AddOrganizationResponse"
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /user/tokens:
    get:
      tags:
        - account
      x-jvm-package: account
      summary: List the [account API tokens](https://docs.codacy.com/codacy-api/api-tokens/) of the authenticated user
      operationId: getUserApiTokens
      parameters:
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ApiTokenListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/InternalServerError'
    post:
      tags:
        - account
      x-jvm-package: account
      summary: Create a new [account API token](https://docs.codacy.com/codacy-api/api-tokens/) for the authenticated user
      operationId: createUserApiToken
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ApiToken'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/InternalServerError'

  /user/tokens/{tokenId}:
    delete:
      tags:
        - account
      x-jvm-package: account
      summary: Delete an [account API token](https://docs.codacy.com/codacy-api/api-tokens/) for the authenticated user by ID
      operationId: deleteUserApiToken
      parameters:
        - $ref: '#/parameters/tokenIdParam'
      responses:
        '204':
          description: 'Successful operation'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /billing/{provider}/{remoteOrganizationName}/subscription:
    delete:
      tags:
        - billing
      x-jvm-package: billing
      summary: Delete billing subscription for organization
      description: Delete billing subscription for organization
      operationId: deleteSubscription
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/churnFeedbackParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'

  /login/integrations:
    get:
      tags:
        - integrations
      x-jvm-package: integrations
      summary: List configured login providers on Codacy's platform
      description: List configured login providers on Codacy's platform
      operationId: listConfiguredLoginIntegrations
      security: [ ] # No authentication
      parameters:
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ConfiguredLoginIntegrationListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '500':
          $ref: '#/responses/InternalServerError'

  /provider/integrations:
    get:
      tags:
        - integrations
      x-jvm-package: integrations
      summary: List provider integrations existing on Codacy's platform
      description: List provider integrations existing on Codacy's platform
      operationId: listProviderIntegrations
      security: [ ] # No authentication
      parameters:
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ProviderIntegrationListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '500':
          $ref: '#/responses/InternalServerError'

  # HACK: This route is hardcoded in ./app/di/filters/LicenseFilter.scala#26
  /configuration/status:
    get:
      tags:
        - configuration
      x-jvm-package: configuration
      summary: Get configuration status
      description: Get configuration status
      operationId: getConfigurationStatus
      security: [ ] # No authentication
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ConfigurationStatusResponse'
        '500':
          $ref: '#/responses/InternalServerError'

  /health:
    get:
      tags:
        - health
      x-jvm-package: health
      summary: Health check endpoint
      description: Health check endpoint
      operationId: health
      security: [ ] # No authentication
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/HealthCheckResponse'
        '500':
          $ref: '#/responses/InternalServerError'

  /admin/license:
    post:
      tags:
        - admin
      x-jvm-package: admin.license
      summary: (non self-hosted admins only) Generates a license for self-hosted instances of Codacy
      operationId: generateLicense
      parameters:
        - in: body
          name: "LicenseBody"
          required: true
          schema:
            $ref: "#/definitions/License"
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/LicenseResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '500':
          $ref: '#/responses/InternalServerError'

  /admin/dormantAccounts:
    delete:
      tags:
        - admin
      x-jvm-package: admin
      summary: (Codacy Self-hosted admins only) Delete Codacy users based on a CSV file exported by GitHub Enterprise
      operationId: deleteDormantAccounts
      parameters:
        - in: body
          name: CSVFileContents
          description: CSV file containing email addresses of the users to delete in a column called "email"
          schema:
            type: string
          required: true
      consumes:
        - text/plain
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/DeleteDormantAccountsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '500':
          $ref: '#/responses/InternalServerError'

  /languages/tools:
    get:
      tags:
        - languages
      x-jvm-package: languages
      summary: Retrieves the list of languages of available tools
      description: Lists the languages of the available tools in Codacy
      operationId: listLanguagesWithTools
      security: [ ] # No authentication
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/LanguageListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '500':
          $ref: '#/responses/InternalServerError'

  /tools:
    get:
      tags:
        - tools
      x-jvm-package: tools
      summary: Retrieves the list of tools
      description: Lists the available tools in Codacy
      operationId: listTools
      security: [ ] # No authentication
      parameters:
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/ToolListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '500':
          $ref: '#/responses/InternalServerError'

  /tools/{toolUuid}/patterns:
    get:
      tags:
        - tools
      x-jvm-package: tools
      summary: Retrieve the list of tool patterns
      description: Lists the available patterns for the given tool
      operationId: listPatterns
      security: [ ] # No authentication
      parameters:
        - $ref: '#/parameters/toolUuidParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: Successful operations
          schema:
            $ref: '#/definitions/PatternListResponse'
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
        '500':
          $ref: '#/responses/InternalServerError'

  /tools/{toolUuid}/patterns/{patternId}:
    get:
      tags:
        - tools
      x-jvm-package: tools
      summary: Retrieve a tool pattern
      description: Get the definition of a specific pattern
      operationId: getPattern
      security: [ ] # No authentication
      parameters:
        - $ref: '#/parameters/toolUuidParam'
        - $ref: '#/parameters/patternIdParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/PatternResponse'
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
        '500':
          $ref: '#/responses/InternalServerError'

  /duplicationTools:
    get:
      tags:
        - tools
      x-jvm-package: tools
      summary: Retrieves the list of tools
      description: Lists the available duplication tools in Codacy
      operationId: listDuplicationTools
      security: [ ] # No authentication
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/DuplicationToolListResponse'
        '500':
          $ref: '#/responses/InternalServerError'

  /metricsTools:
    get:
      tags:
        - tools
      x-jvm-package: tools
      summary: Retrieves the list of tools
      description: Lists the available metrics tools in Codacy
      operationId: listMetricsTools
      security: [ ] # No authentication
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/MetricsToolListResponse'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/files:
    get:
      tags:
        - repository
      x-jvm-package: repository
      summary: List files in a repository
      description: |
        Returns the most recent analysis information for the files in a repository as available on the [Files page](https://docs.codacy.com/repositories/files-view/).
        Files that are [ignored on Codacy](https://docs.codacy.com/repositories-configure/ignoring-files/) aren't returned.

        **Note:** When applied to public repositories, this operation does not require authentication.
      operationId: listFiles
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/branchNameParam'
        - $ref: '#/parameters/filesSearchFilter'
        - $ref: '#/parameters/filesSortParam'
        - $ref: '#/parameters/directionParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: List of files in the repository
          schema:
            $ref: '#/definitions/FileListResponse'
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/files/{fileId}:
    get:
      tags:
        - repository
      x-jvm-package: repository
      summary: Get analysis information and coverage metrics for a file in a repository
      operationId: getFileWithAnalysis
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/fileIdParam'
      responses:
        '200':
          description: File with analysis
          schema:
            $ref: '#/definitions/FileInformationWithAnalysis'
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/coding-standards:
    get:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: List the coding standards for an organization, including draft coding standards
      operationId: listCodingStandards
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: List of coding standards for an organization
          schema:
            $ref: "#/definitions/CodingStandardsListResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    post:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: >-
        Create a draft coding standard for an organization.
        To promote the draft coding standard to effective coding standard,
        see [promoteDraftCodingStandard](#promotedraftcodingstandard)
      operationId: createCodingStandard
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/sourceRepositoryParam'
        - $ref: '#/parameters/sourceCodingStandardParam'
        - in: body
          name: createCodingStandardBody
          description: Details of the coding standard to create
          required: true
          schema:
            $ref: "#/definitions/CreateCodingStandardBody"
      responses:
        '201':
          description: Successfully created a coding standard
          schema:
            $ref: "#/definitions/CodingStandardResponse"
        '404':
          $ref: '#/responses/NotFound'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '409':
          $ref: '#/responses/Conflict'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          description: An unexpected error occurred while creating a coding standard
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/InternalServerError"

  /organizations/{provider}/{remoteOrganizationName}/coding-standards/{codingStandardId}:
    get:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: Get a coding standard
      operationId: getCodingStandard
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/codingStandardIdParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: "#/definitions/CodingStandardResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    delete:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: Delete a coding standard
      operationId: deleteCodingStandard
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/codingStandardIdParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          description: An unexpected error occurred while deleting a coding standard
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/InternalServerError"

  /organizations/{provider}/{remoteOrganizationName}/coding-standards/{codingStandardId}/tools:
    get:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: List tools in a coding standard
      operationId: listCodingStandardTools
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/codingStandardIdParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: "#/definitions/CodingStandardToolsListResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          description: An unexpected error occurred while listing the tools of the coding standard
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/InternalServerError"

  /organizations/{provider}/{remoteOrganizationName}/coding-standards/{codingStandardId}/setDefault:
    post:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: Set the default coding standard for an organization
      operationId: setDefaultCodingStandard
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/codingStandardIdParam'
        - in: body
          name: setDefaultCodingStandard
          required: true
          schema:
            $ref: "#/definitions/SetDefaultCodingStandardBody"
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/coding-standards/{codingStandardId}/tools/{toolUuid}/patterns:
    get:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: List the code patterns configured for a tool in a coding standard
      operationId: listCodingStandardPatterns
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/codingStandardIdParam'
        - $ref: '#/parameters/toolUuidParam'
        - $ref: '#/parameters/languagesFilterParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/severityLevelsParam'
        - $ref: '#/parameters/patternsSortParam'
        - $ref: '#/parameters/directionParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: "#/definitions/CodingStandardPatternsListResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/coding-standards/{codingStandardId}/tools/{toolUuid}/patterns/update:
    post:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: Bulk updates the code patterns of a tool in a coding standard.
      description: |
        Use filters to specify the code patterns to update, or omit the filters to update all code patterns.
      operationId: updateCodingStandardPatterns
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/codingStandardIdParam'
        - $ref: '#/parameters/toolUuidParam'
        - $ref: '#/parameters/languagesFilterParam'
        - $ref: '#/parameters/categoriesParam'
        - $ref: '#/parameters/severityLevelsParam'
        - in: body
          name: updateCodingStandardPatternsBody
          required: true
          schema:
            $ref: '#/definitions/UpdateCodingStandardPatternsBody'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/coding-standards/{codingStandardId}/tools/{toolUuid}:
    patch:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: Configure a tool in a draft coding standard.
      description: |
        Toggle a tool and configure its code patterns in a draft coding standard.
        Only the code patterns included in the body are updated, and if there are none only the enabled status of the tool is set.
        You can only update draft coding standards and configure a maximum of 1000 code patterns per call.
      operationId: updateCodingStandardToolConfiguration
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/codingStandardIdParam'
        - $ref: '#/parameters/toolUuidParam'
        - $ref: '#/parameters/toolConfigurationParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/coding-standards/{codingStandardId}/repositories:
    get:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: List the repositories that are using a coding standard
      operationId: listCodingStandardRepositories
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/codingStandardIdParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: "#/definitions/CodingStandardRepositoriesListResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

    patch:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: Apply a coding standard to a list of repositories
      description: |
        Link or unlink a coding standard to a list of repositories.
        If the coding standard is a draft, the changes will only be effective when promoting the draft coding standard.
      operationId: applyCodingStandardToRepositories
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/codingStandardIdParam'
        - in: body
          name: applyCodingStandardToRepositoriesBody
          required: true
          schema:
            $ref: '#/definitions/ApplyCodingStandardToRepositoriesBody'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: "#/definitions/ApplyCodingStandardToRepositoriesResultResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/gate-policies/setCodacyDefault:
    post:
      tags:
        - gate policies
      x-jvm-package: policies
      summary: Set the built-in Codacy gate policy as the default for an organization
      description: This endpoint is experimental and still under development.
      # TODO Remove the sentence above when feature is complete.
      operationId: setCodacyDefault
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '204':
          description: Successful operation
          headers:
            X-Maturity:
              type: string
              enum: [ "experimental" ]
              description: Experimental API. Use at your own risk.
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/gate-policies/{gatePolicyId}:
    delete:
      tags:
        - gate policies
      x-jvm-package: policies
      summary: Delete a gate policy
      description: This endpoint is experimental and still under development.
      # TODO Remove the sentence above when feature is complete.
      operationId: deleteGatePolicy
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/gatePolicyId'
      responses:
        '204':
          description: Successful operation
          headers:
            X-Maturity:
              type: string
              enum: [ "experimental" ]
              description: Experimental API. Use at your own risk.
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    patch:
      tags:
        - gate policies
      x-jvm-package: policies
      summary: Update a gate policy
      description: This endpoint is experimental and still under development.
      # TODO Remove the sentence above when feature is complete.
      operationId: updateGatePolicy
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/gatePolicyId'
        - in: body
          name: updateGatePolicyBody
          description: The new value for the name, is default option, or quality gates of the gate policy
          required: true
          schema:
            $ref: '#/definitions/UpdateGatePolicyBody'
      responses:
        '200':
          description: Successful operation
          headers:
            X-Maturity:
              type: string
              enum: [ "experimental" ]
              description: Experimental API. Use at your own risk.
          schema:
            $ref: "#/definitions/GetGatePolicyResultResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'
    get:
      tags:
        - gate policies
      x-jvm-package: policies
      summary: Get a gate policy
      description: This endpoint is experimental and still under development.
      # TODO Remove the sentence above when feature is complete.
      operationId: getGatePolicy
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/gatePolicyId'
      responses:
        '200':
          description: Successful operation
          headers:
            X-Maturity:
              type: string
              enum: [ "experimental" ]
              description: Experimental API. Use at your own risk.
          schema:
            $ref: "#/definitions/GetGatePolicyResultResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/gate-policies:
    post:
      tags:
        - gate policies
      x-jvm-package: policies
      summary: Create a gate policy
      description: This endpoint is experimental and still under development.
      # TODO Remove the sentence above when feature is complete.
      operationId: createGatePolicy
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - in: body
          name: createGatePolicyBody
          description: Details of the gate policy to create
          required: true
          schema:
            $ref: "#/definitions/CreateGatePolicyBody"
      responses:
        '200':
          description: Successful operation
          headers:
            X-Maturity:
              type: string
              enum: [ "experimental" ]
              description: Experimental API. Use at your own risk.
          schema:
            $ref: '#/definitions/GetGatePolicyResultResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'
    get:
      tags:
        - gate policies
      x-jvm-package: policies
      summary: List the gate policies for an organization
      description: This endpoint is experimental and still under development.
      # TODO Remove the sentence above when feature is complete.
      operationId: listGatePolicies
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: Successful operation
          headers:
            X-Maturity:
              type: string
              enum: [ "experimental" ]
              description: Experimental API. Use at your own risk.
          schema:
            $ref: '#/definitions/GatePoliciesListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/settings/sync:
    post:
      tags:
        - organization
      x-jvm-package: organization
      summary: Synchronize Codacy organization name with the Git provider
      operationId: syncOrganizationName
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: "#/definitions/SyncProviderSettingOrganizationResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/settings/submodules/check:
    get:
      tags:
        - organization
      x-jvm-package: organization
      summary: Check if the submodules option is enabled for the organization
      operationId: checkSubmodules
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/CheckSubmodulesResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'



  /organizations/{provider}/{remoteOrganizationName}/gate-policies/{gatePolicyId}/repositories:
    get:
      tags:
        - gate policies
      x-jvm-package: policies
      summary: List all repositories following a gate policy
      description: This endpoint is experimental and still under development.
      # TODO Remove the sentence above when feature is complete.
      operationId: listRepositoriesFollowingGatePolicy
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/gatePolicyId'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: Successful operation
          headers:
            X-Maturity:
              type: string
              enum: [ "experimental" ]
              description: Experimental API. Use at your own risk.
          schema:
            $ref: "#/definitions/ListRepositoriesFollowingGatePolicyResultResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

    put:
      tags:
        - gate policies
      x-jvm-package: policies
      summary: Apply a gate policy to a list of repositories
      description: |
        Link or unlink a gate policy to a list of repositories.
        This endpoint is experimental and still under development.
      # TODO Remove the sentence above when feature is complete.
      operationId: applyGatePolicyToRepositories
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/gatePolicyId'
        - in: body
          name: ApplyGatePolicyToRepositoriesBody
          required: true
          schema:
            $ref: '#/definitions/ApplyGatePolicyToRepositoriesBody'
      responses:
        '204':
          description: 'Successful operation'
          headers:
            X-Maturity:
              type: string
              enum: [ "experimental" ]
              description: Experimental API. Use at your own risk.
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/settings/hooks:
    post:
      tags:
        - organization
      x-jvm-package: organization
      summary: Create organization hooks
      operationId: createOrganizationHooks
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/coding-standards/{codingStandardId}/promote:
    post:
      tags:
        - coding standards
      x-jvm-package: standards
      summary: >-
        Promote a draft coding standard to an effective coding standard.
        If the draft coding standard is marked as default, it becomes the new default coding standard
      description: Returns the result of applying the coding standard to the repositories.
      operationId: promoteDraftCodingStandard
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/codingStandardIdParam'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: "#/definitions/ApplyCodingStandardToRepositoriesResultResponse"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/tokens:
    get:
      tags:
        - repository
      x-jvm-package: repository
      summary: List the [project API tokens](https://docs.codacy.com/codacy-api/api-tokens/) for a repository
      operationId: listRepositoryApiTokens
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ApiTokenListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    post:
      tags:
        - repository
      x-jvm-package: repository
      summary: Create a new [project API token](https://docs.codacy.com/codacy-api/api-tokens/) for a repository
      operationId: createRepositoryApiToken
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
      responses:
        '201':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ApiTokenResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/tokens/{tokenId}:
    delete:
      tags:
        - repository
      x-jvm-package: repository
      summary: Delete a [project API token](https://docs.codacy.com/codacy-api/api-tokens/) for a repository by ID
      operationId: deleteRepositoryApiToken
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/tokenIdParam'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/coverage/status:
    get:
      tags:
        - repository
        - coverage
      x-jvm-package: repository
      summary: Returns a list of the most recent coverage reports and their respective status
      operationId: listCoverageReports
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/limitParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/CoverageReportResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/files/{fileId}/source:
    get:
      tags:
        - file
      x-jvm-package: fileExtension
      summary: Returns a code block from a file
      operationId: getCodeBlock
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/fileIdParam'
        - $ref: '#/parameters/startLineParam'
        - $ref: '#/parameters/endLineParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/CodeBlockLineListResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/files/{fileId}/coverage:
    get:
      tags:
        - repository
      x-jvm-package: repository
      summary: Get coverage information for a file in the head commit of a repository branch.
      operationId: getFileCoverage
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/fileIdParam'
      responses:
        '200':
          description: File Coverage
          schema:
            $ref: '#/definitions/GetFileCoverageResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/file:
    patch:
      tags:
        - repository
      x-jvm-package: repository
      summary: Ignore or unignore a file
      operationId: updateFileState
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - in: body
          name: fileState
          required: true
          schema:
            $ref: "#/definitions/FileStateBody"
      responses:
        '204':
          description: 'Successful operation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  # quote from docs:
  # Note that, currently, OpenAPI Specification does not permit to define common response headers for different response
  # codes or different API operations. You need to define the headers for each response individually.
  /organizations/{provider}/{remoteOrganizationName}/security/items:
    get:
      summary: >-
        Returns a paginated list of security and risk management items for an organization.
        Repository filtering is limited to 100 names.
      operationId: listSecurityItems
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
          #although it is deprecated it was a conscious decision to use it - https://codacy.slack.com/archives/C01DLMTUUA1/p1690280795466399
          #if this becomes a problem this endpoint should be changed to a POST, so as the endpoints on SRM Service
        - $ref: '#/parameters/repositoriesParam'
        - $ref: '#/parameters/srmStatusParam'
        - $ref: '#/parameters/srmPriorityParam'
        - $ref: '#/parameters/srmSecurityCategoryParam'
      tags:
        - security
      x-jvm-package: security
      responses:
        '200':
          description: Returns security and risk management items.
          schema:
            $ref: '#/definitions/SrmItemsResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/security/dashboard:
    get:
      summary: >-
        Returns the metrics for the security and risk management dashboard.
        Repository filtering is limited to 100 names.
      operationId: getSecurityDashboard
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
          #although it is deprecated it was a conscious decision to use it - https://codacy.slack.com/archives/C01DLMTUUA1/p1690280795466399
          #if this becomes a problem this endpoint should be changed to a POST, so as the endpoints on SRM Service
        - $ref: '#/parameters/repositoriesParam'
        - $ref: '#/parameters/srmPriorityParam'
        - $ref: '#/parameters/srmSecurityCategoryParam'
      tags:
        - security
      x-jvm-package: security
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/SRMDashboardResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/security/managers:
    get:
      summary: Returns a paginated list of organization admins and security managers.
      operationId: listSecurityManagers
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      tags:
        - security
      x-jvm-package: security
      responses:
        '200':
          description: Returns security managers, including organization admins.
          schema:
            $ref: '#/definitions/SecurityManagersResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
    post:
      summary: Assign the Security Manager role to an organization member.
      operationId: postSecurityManager
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - in: body
          name: securityManagerBody
          description: User ID of the organization member to be promoted to security manager.
          required: true
          schema:
            $ref: "#/definitions/SecurityManagerBody"
      tags:
        - security
      x-jvm-package: security
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/security/managers/{userId}:
    delete:
      summary: Revoke the Security Manager role from an organization member.
      operationId: deleteSecurityManager
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/userId'
      tags:
        - security
      x-jvm-package: security
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/security/repositories:
    get:
      summary: Return a list of organization repositories that have security issues.
      operationId: listSecurityRepositories
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      tags:
        - security
      x-jvm-package: security
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/SecurityRepositoriesResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/security/categories:
    get:
      summary: Return a list of security subcategories that have security issues.
      operationId: listSecurityCategories
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/cursorParam'
        - $ref: '#/parameters/limitParam'
      tags:
        - security
      x-jvm-package: security
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/SecurityCategoriesResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/integrations/jira:
    get:
      operationId: getJiraIntegration
      description: Return the Jira integration of the organization.
      tags:
        - organization
      x-jvm-package: organization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/JiraIntegrationResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'
    put:
      operationId: createOrUpdateJiraIntegration
      description: Create or Update the Jira integration of the organization.
      tags:
        - organization
      x-jvm-package: organization
      parameters:
        - $ref: '#/parameters/oauthCodeParam'
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/JiraIntegrationResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '409':
          $ref: '#/responses/Conflict'
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'
    delete:
      operationId: deleteJiraIntegration
      description: Delete the Jira integration of the organization and associated resources.
      tags:
        - organization
      x-jvm-package: organization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: "#/responses/NotFound"
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'

  /organizations/{provider}/{remoteOrganizationName}/integrations/slack:
    get:
      operationId: getSlackIntegration
      description: >-
        Return the Slack integration of the organization.
      tags:
        - organization
      x-jvm-package: organization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/SlackIntegrationResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'
    put:
      operationId: createOrUpdateSlackIntegration
      description: >-
        Create or update the Slack integration of the organization.
      tags:
        - organization
      x-jvm-package: organization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - in: body
          name: slackIntegrationRequestBody
          required: true
          schema:
            $ref: "#/definitions/SlackIntegrationRequest"
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/SlackIntegrationResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'
    delete:
      operationId: deleteSlackIntegration
      description: >-
        Delete the Slack integration of the organization and associated resources.
      tags:
        - organization
      x-jvm-package: organization
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      responses:
        '204':
          description: Successful operation
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: "#/responses/NotFound"
        '500':
          $ref: '#/responses/InternalServerError'
        '502':
          $ref: '#/responses/BadGateway'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests/{pullRequestNumber}/diff:
    get:
      tags:
        - repository
      x-jvm-package: repository
      summary: Returns the human-readable Git diff of a pull request
      operationId: getPullRequestDiff
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/pullRequestNumberParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/DiffResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/InternalServerError'

  /coverage/organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/pull-requests/{pullRequestNumber}/diff:
    get:
      tags:
        - coverage
      x-jvm-package: coverage
      summary: Returns the human-readable Git diff of a pull request
      operationId: getPullRequestGitDiff
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/pullRequestNumberParam'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/DiffResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/repositories/{repositoryName}/commits/{commitUuid}/diff:
    get:
      tags:
        - repository
      x-jvm-package: repository
      summary: Returns the human-readable Git diff of a commit
      operationId: getCommitDiff
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/repositoryNameParam'
        - $ref: '#/parameters/commitUuid'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/DiffResponse'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '422':
          $ref: '#/responses/UnprocessableEntity'
        '500':
          $ref: '#/responses/InternalServerError'

  /reports/organizations/{provider}/{remoteOrganizationName}/security/items:
    get:
      summary: Generate a CSV file listing all security and risk management items for an organization.
      operationId: getReportSecurityItems
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
      tags:
        - reports
      # Non-security report endpoints should have their own package.
      #
      # This endpoint should be implemented in a streaming fashion but that is not properly supported by Guardrail.
      # The endpoint is declared here so that this file continues to be the single source of truth and documentation
      # but the Guardrail generated stub will not be implemented.
      # To avoid having to implement the generated stub, the generated code is placed in its own isolated package.
      #
      # KEEP THIS DEFINITION IN SYNC WITH THE FILE ReportsStreamingSecurityController
      x-jvm-package: reports.security.streaming
      responses:
        '200':
          description: CSV file containing the security and risk management items.
          headers:
            Transfer-Encoding:
              type: string
              enum: [ "chunked" ]
              description: See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Transfer-Encoding .
            Content-Disposition:
              type: string
              description: See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition .
          schema:
            type: string
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'

  /organizations/{provider}/{remoteOrganizationName}/commit/{commitId}:
    get:
      summary: Get information about a commit
      operationId: getCommitDetails
      parameters:
        - $ref: '#/parameters/providerParam'
        - $ref: '#/parameters/remoteOrganizationNameParam'
        - $ref: '#/parameters/commitId'
      tags:
        - analysis
      x-jvm-package: analysis
      responses:
        '200':
          description: Details about the commit.
          schema:
            $ref: '#/definitions/CommitDetails'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '500':
          $ref: '#/responses/InternalServerError'
